################################################################
src: bzl/obazl/mina/src/lib/dummy_values
TODO: add at top of file:
load("@obazl_rules_ocaml//ocaml:rules.bzl", "ocaml_module")
load("//:BUILD.bzl", "REPO_MODULE_OPTS")
load(":BUILD.bzl", "PKG_MODULE_OPTS")

TODO:  add ":_Dummy_values" to archive deps

#########
ocaml_ns(
    name = "Dummy_values_ns",
    ns="dummy_values",
    submodules = ["dummy_values.ml"]
)

#############
ocaml_module(
    name = "Dummy_values",
    src = ":dummy_values.ml",
    opts = REPO_MODULE_OPTS + PKG_MODULE_OPTS,
    ppx = "@//bzl/ppx:ppx.exe[ppx_version][ppx_jane][ppxlib.metaquot][bisect_ppx]",
    ppx_args = [
        # do not sort (buildifier)
        "--conditional",
        "-inline-test-lib",
        "dummy_values",
    ],
    deps = [
        "@mina//src/lib/crypto_params",
        "@snarky//src/base:snarky_backendless",
    ],
)

TOOL = "//src/lib/dummy_values/gen_values:gen_values.exe"

genrule(
    name = "gensrcs",
    outs = ["dummy_values.ml"],
    cmd = "\n".join([
        "$(location {tool})".format(tool = TOOL),
        "cp dummy_values.ml \"$@\"",
    ]),
    tools = [TOOL],
)
