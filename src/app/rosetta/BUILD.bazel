load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_executable",
    "ocaml_module",
    "ppx_executable",
)

################################################################
## STANZA 1: EXECUTABLE ROSETTA
################################################################
ROSETTA_EXECUTABLE_OPTS = []

ROSETTA_MODULE_OPTS = []

ROSETTA_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/logger",
    "@mina//src/lib/rosetta_models",
    "@mina//src/app/rosetta/lib",
]
ROSETTA_DEPS_OPAM = [
    "async",
    "async_ssl",
    "caqti",
    "caqti-async",
    "caqti-driver-postgresql",
    "cohttp",
    "ctypes",
    "cohttp-async",
    "core_kernel",
    "ppx_deriving_yojson.runtime",
    "yojson",
]

#################
ocaml_executable(
    name = "rosetta",
    opts = ROSETTA_EXECUTABLE_OPTS,
    visibility = ["//visibility:public"],
    deps = [ # ROSETTA_DEPS + [
        # do not sort (buildifier)
        ":_Rosetta",
    ],
)

#############
ocaml_module(
    name   = "_Rosetta",
    struct = "rosetta.ml",
    opts = ROSETTA_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "rosetta",
    ],
    deps = ROSETTA_DEPS,
    deps_opam = ROSETTA_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "ppx_expect.collector",
        "yojson",
        "ppx_hash.runtime-lib",
        "ppx_deriving_yojson.runtime",
        "ppx_sexp_conv.runtime-lib",
        "ppx_deriving.runtime",
        "ppx_assert.runtime-lib",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "ppx_bench.runtime-lib",
        "ppx_enumerate.runtime-lib",
        "ppx_module_timer.runtime",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/app/rosetta:__pkg__",
    ],
    deps = [
        "@graphql_ppx//src/native:graphql_ppx",
        "@mina//src/lib/ppx_coda",
        "@ppx_version//src:ppx_version",
    ],
    deps_opam = [
        "ppx_deriving.show",
        "ppx_deriving_yojson",
        "ppx_jane",
        "ppxlib",
    ]
)
