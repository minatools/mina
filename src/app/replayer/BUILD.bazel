load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_executable",
    "ocaml_module",
    "ppx_executable",
)
load(
    "//:BUILD.bzl",
    "CONFIG_MLH",
)

REPLAYER_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/mina_base",
    "@mina//src/lib/coda_state",
    "@mina//src/lib/genesis_constants",
    "@mina//src/lib/genesis_ledger_helper",
]

REPLAYER_DEPS_OPAM = [
    "async_kernel",
    "core",
    "caqti",
    "caqti-async",
    "caqti-driver-postgresql",
    "yojson",
]

#################
ocaml_executable(
    name = "replayer",
    visibility = ["//visibility:public"],
    deps = [
        # do not sort (buildifier)
        ":_Replayer",
        # ":_Sql",
    ],
)

#############
ocaml_module(
    name   = "_Replayer",
    struct = "replayer.ml",
    ppx = ":ppx1.exe",
    ppx_data = CONFIG_MLH,
    deps = REPLAYER_DEPS + [
        # do not sort (buildifier)
        ":_Sql",
    ],
    deps_opam = REPLAYER_DEPS_OPAM
)

#############
ocaml_module(
    name   = "_Sql",
    struct = "sql.ml",
    ppx = ":ppx1.exe",
    ppx_data = CONFIG_MLH,
    deps = REPLAYER_DEPS,
    deps_opam = REPLAYER_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "yojson",
        "ppx_hash.runtime-lib",
        "ppx_deriving_yojson.runtime",
        "ppx_sexp_conv.runtime-lib",
        "ppx_compare.runtime-lib",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/app/replayer:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda",
        "@ppx_version//src:ppx_version",
    ],
    deps_opam = [
        "ppx_compare",
        "ppx_deriving_yojson",
        "ppx_hash",
        "ppx_let",
        "ppx_sexp_conv",
        "ppxlib",
    ]
)
