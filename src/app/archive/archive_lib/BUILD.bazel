## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns",
    "ppx_executable",
)

################################################################
## STANZA 1: LIBRARY ARCHIVE_LIB
################################################################
ARCHIVE_LIB_MODULE_OPTS = []

ARCHIVE_LIB_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:core",
    "@opam//pkg:async",
    "@opam//pkg:caqti-async",
    "@opam//pkg:caqti",
    "@opam//pkg:caqti-driver-postgresql",
    "@mina//src/lib/mina_base",
    "@mina//src/lib/coda_transition",
    "@mina//src/lib/one_or_two",
    "@mina//src/lib/transition_frontier",
]

##############
ocaml_archive(
    name = "archive_lib",
    opts = [],
    visibility = ["//visibility:public"],
    deps = ARCHIVE_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Ast",
        ":_Diff",
        ":_Processor",
        ":_Rpc",
        ":_Test",
    ],
)

#########
ocaml_ns(
    name = "Archive_lib_ns",
    ns = "archive_lib",
    opts = [],
    submodules = [
        # do not sort (buildifier)
        "ast.ml",
        "diff.ml",
        "processor.ml",
        "rpc.ml",
        "test.ml",
    ],
)

#############
ocaml_module(
    name = "_Ast",
    src = "ast.ml",
    ns = ":Archive_lib_ns",
    opts = ARCHIVE_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "archive_lib",
    ],
    deps = ARCHIVE_LIB_DEPS,
)

#############
ocaml_module(
    name = "_Diff",
    src = "diff.ml",
    ns = ":Archive_lib_ns",
    opts = ARCHIVE_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "archive_lib",
    ],
    deps = ARCHIVE_LIB_DEPS,
)

#############
ocaml_module(
    name = "_Processor",
    src = "processor.ml",
    ns = ":Archive_lib_ns",
    opts = ARCHIVE_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "archive_lib",
    ],
    deps = ARCHIVE_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Diff",
        ":_Rpc",
    ],
)

#############
ocaml_module(
    name = "_Rpc",
    src = "rpc.ml",
    ns = ":Archive_lib_ns",
    opts = ARCHIVE_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "archive_lib",
    ],
    deps = ARCHIVE_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Diff",
    ],
)

#############
ocaml_module(
    name = "_Test",
    src = "test.ml",
    ns = ":Archive_lib_ns",
    opts = ARCHIVE_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "archive_lib",
    ],
    deps = ARCHIVE_LIB_DEPS + ["_Processor"] # obazl:retain
)

###############
ppx_executable(
    name = "ppx1.exe",
    lazy_deps = [
        "@opam//pkg:ppx_expect.collector",
        "@opam//pkg:ppx_hash.runtime-lib",
        "@opam//pkg:ppx_sexp_conv.runtime-lib",
        "@opam//pkg:ppx_assert.runtime-lib",
        "@opam//pkg:ppx_compare.runtime-lib",
        "@opam//pkg:ppx_inline_test.runtime-lib",
        "@opam//pkg:ppx_bench.runtime-lib",
        "@opam//pkg:ppx_enumerate.runtime-lib",
        "@opam//pkg:ppx_module_timer.runtime",
    ],
    main = "//bzl/ppx/exe:Driver",
    opts = [],
    visibility = [
        "//src/app/archive/archive_lib:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda",
        "@opam//pkg:ppx_custom_printf",
        "@opam//pkg:ppx_jane",
        "@opam//pkg:ppxlib",
        "@ppx_version//src:ppx_version",
        "@snarky//h_list/ppx:ppx_h_list",
    ],
)
