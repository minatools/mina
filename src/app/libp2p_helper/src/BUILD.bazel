load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

# gazelle:prefix

go_library(
    name = "codanet",
    srcs = ["codanet.go"],
    importpath = "codanet",
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_ipfs_go_ds_badger//:go-ds-badger",
        "@com_github_ipfs_go_log//:go-log",
        "@com_github_libp2p_go_libp2p//:go-libp2p",
        "@com_github_libp2p_go_libp2p//config",
        "@com_github_libp2p_go_libp2p//p2p/discovery",
        "@com_github_libp2p_go_libp2p_connmgr//:go-libp2p-connmgr",
        "@com_github_libp2p_go_libp2p_core//connmgr",
        "@com_github_libp2p_go_libp2p_core//control",
        "@com_github_libp2p_go_libp2p_core//crypto",
        "@com_github_libp2p_go_libp2p_core//host",
        "@com_github_libp2p_go_libp2p_core//metrics",
        "@com_github_libp2p_go_libp2p_core//network",
        "@com_github_libp2p_go_libp2p_core//peer",
        "@com_github_libp2p_go_libp2p_core//peerstore",
        "@com_github_libp2p_go_libp2p_core//protocol",
        "@com_github_libp2p_go_libp2p_core//routing",
        "@com_github_libp2p_go_libp2p_discovery//:go-libp2p-discovery",
        "@com_github_libp2p_go_libp2p_kad_dht//:go-libp2p-kad-dht",
        "@com_github_libp2p_go_libp2p_kad_dht//dual",
        "@com_github_libp2p_go_libp2p_mplex//:go-libp2p-mplex",
        "@com_github_libp2p_go_libp2p_peerstore//pstoreds",
        "@com_github_libp2p_go_libp2p_pubsub//:go-libp2p-pubsub",
        "@com_github_libp2p_go_libp2p_record//:go-libp2p-record",
        "@com_github_libp2p_go_mplex//:go-mplex",
        "@com_github_multiformats_go_multiaddr//:go-multiaddr",
        "@com_github_multiformats_go_multiaddr//net",
        "@org_golang_x_crypto//blake2b",
    ],
)

go_test(
    name = "lib_test",
    srcs = ["codanet_test.go"],
    embed = [":codanet"],
    deps = [
        "@com_github_libp2p_go_libp2p_core//peer",
        "@com_github_multiformats_go_multiaddr//:go-multiaddr",
        "@com_github_stretchr_testify//require",
    ],
)
