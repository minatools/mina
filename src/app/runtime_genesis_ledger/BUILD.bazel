load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_executable",
    "ocaml_module",
    "ppx_executable",
)

CONFIG_MLH = ["//src:config"]

RUNTIME_GENESIS_LEDGER_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/blockchain_snark",
    "@mina//src/lib/mina_base",
    "@mina//src/lib/genesis_proof",
    "@mina//src/lib/mina_state",
    "@mina//src/lib/genesis_ledger_helper",
    "@mina//src/lib/runtime_config",
    "@mina//src/lib/snark_keys",
    "@mina//src/lib/snark_params",
    "@snarky//src/base:snarky_backendless",
    "@mina//src/lib/staged_ledger",
]

RUNTIME_GENESIS_LEDGER_DEPS = [
    "async",
    "core",
]

#################
ocaml_executable(
    name = "runtime_genesis_ledger.exe",
    visibility = ["//visibility:public"],
    deps = [":_Runtime_genesis_ledger"]
)

#############
ocaml_module(
    name   = "_Runtime_genesis_ledger",
    struct = "runtime_genesis_ledger.ml",
    ppx = ":ppx1.exe",
    ppx_data = CONFIG_MLH,
    deps = RUNTIME_GENESIS_LEDGER_DEPS,
    deps_opam = RUNTIME_GENESIS_LEDGER_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "yojson",
        "ppx_deriving_yojson.runtime",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    deps = [
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:ppx_version",
    ],
    deps_opam = [
        "ppx_deriving_yojson",
        "ppx_let",
        "ppxlib",
    ]
)
