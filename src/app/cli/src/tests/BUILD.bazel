load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_archive",
    "ppx_executable",
)

CONFIG_MLH = ["//src:config"]

################################################################
## STANZA 1: LIBRARY TESTS
################################################################
TESTS_MODULE_OPTS = []

TESTS_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/mina_base:mina_base",
    "@mina//src/lib/mina_graphql:mina_graphql",
    "@mina//src/lib/mina_lib:mina_lib",
    "@mina//src/lib/mina_state:mina_state",
    "@mina//src/lib/mina_net2:mina_net2",
    "@mina//src/lib/mina_transition:mina_transition",
    "@mina//src/lib/mina_version",
    "@mina//src/lib/parallel:parallel",
    "@mina//src/lib/protocol_version:protocol_version",
    "@mina//src/lib/node_addrs_and_ports:node_addrs_and_ports",
    "@mina//src/lib/transition_frontier:transition_frontier",
    "@mina//src/app/cli/src/init:init",
]

TESTS_DEPS_OPAM = [
    "async",
    "core",
]

#########
ocaml_ns_archive(
    name = "tests",
    submodules = [
        ":_Coda_archive_processor_test",
        ":_Coda_block_production_test",
        ":_Coda_bootstrap_test",
        ":_Coda_change_snark_worker_test",
        ":_Coda_delegation_test",
        ":_Coda_five_nodes_test",
        ":_Coda_long_fork",
        ":_Coda_peers_test",
        ":_Coda_process",
        ":_Coda_processes",
        ":_Coda_restart_node_test",
        ":_Coda_restarts_and_txns_holy_grail",
        ":_Coda_shared_prefix_multiproducer_test",
        ":_Coda_shared_prefix_test",
        ":_Coda_shared_state_test",
        ":_Coda_transitive_peers_test",
        ":_Coda_txns_and_restart_non_producers",
        ":_Coda_worker",
        ":_Coda_worker_testnet",
        ":_Full_test",
        ":_Heartbeat",
    ],
    visibility = [
        "//src/app/cli/src:__pkg__",
    ]
)

#############
ocaml_module(
    name = "_Coda_archive_processor_test",
    struct = "coda_archive_processor_test.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        ":_Coda_worker_testnet",  # obazl:retain
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_block_production_test",
    struct = "coda_block_production_test.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        ":_Coda_worker_testnet",  # obazl:retain
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_bootstrap_test",
    struct = "coda_bootstrap_test.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        ":_Coda_worker_testnet",  # obazl:retain
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_change_snark_worker_test",
    struct = "coda_change_snark_worker_test.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        ":_Coda_worker_testnet",  # obazl:retain
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_delegation_test",
    struct = "coda_delegation_test.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        # do not sort (buildifier)
        ":_Coda_worker_testnet",  # obazl:retain
        ":_Heartbeat",
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_five_nodes_test",
    struct = "coda_five_nodes_test.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        ":_Coda_worker_testnet",  # obazl:retain
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_long_fork",
    struct = "coda_long_fork.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        ":_Coda_worker_testnet",  # obazl:retain
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_peers_test",
    struct = "coda_peers_test.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        ":_Coda_processes",  # obazl:retain
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_process",
    struct = "coda_process.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    ppx_data = CONFIG_MLH,
    deps = TESTS_DEPS + [
        # do not sort (buildifier)
        ":_Coda_worker",
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_processes",
    struct = "coda_processes.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    ppx_data = CONFIG_MLH,
    deps = TESTS_DEPS + [
        ":_Coda_process",  # obazl:retain
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_restart_node_test",
    struct = "coda_restart_node_test.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        # do not sort (buildifier)
        ":_Coda_worker_testnet",  # obazl:retain
        ":_Heartbeat",
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_restarts_and_txns_holy_grail",
    struct = "coda_restarts_and_txns_holy_grail.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        ":_Coda_worker_testnet",  # obazl:retain
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_shared_prefix_multiproducer_test",
    struct = "coda_shared_prefix_multiproducer_test.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        ":_Coda_worker_testnet",  # obazl:retain
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_shared_prefix_test",
    struct = "coda_shared_prefix_test.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        ":_Coda_worker_testnet",  # obazl:retain
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_shared_state_test",
    struct = "coda_shared_state_test.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        # do not sort (buildifier)
        ":_Coda_worker_testnet",  # obazl:retain
        ":_Heartbeat",
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_transitive_peers_test",
    struct = "coda_transitive_peers_test.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        ":_Coda_processes",  # obazl:retain
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_txns_and_restart_non_producers",
    struct = "coda_txns_and_restart_non_producers.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        ":_Coda_worker_testnet",  # obazl:retain
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_worker",
    struct = "coda_worker.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS,
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_worker_testnet",
    struct = "coda_worker_testnet.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS + [
        # do not sort (buildifier)
        ":_Coda_process",
        ":_Coda_processes",  # obazl:retain
        ":_Coda_worker",
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Full_test",
    struct = "full_test.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    ppx_data = CONFIG_MLH,
    deps = TESTS_DEPS + [
        # do not sort (buildifier)
        ":_Coda_processes",
    ],
    deps_opam = TESTS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Heartbeat",
    struct = "heartbeat.ml",
    opts = TESTS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    deps = TESTS_DEPS,
    deps_opam = TESTS_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "ppx_sexp_conv.runtime-lib",
        "ppx_assert.runtime-lib",
        "bin_prot",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    deps = [
        "@mina//src/lib/ppx_coda:ppx_coda",
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:ppx_version",
    ],
    deps_opam = [
        "ppx_assert",
        "ppx_bin_prot",
        "ppx_custom_printf",
        "ppx_let",
        "ppxlib",
    ]
)
