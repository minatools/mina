load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ocaml_signature",
    "ppx_executable",
)

CONFIG_MLH = ["//src:config"]

PPX_PRINT = "@ppx//print:binary"

################################################################
## STANZA 1: LIBRARY MINA_STATE
################################################################
MINA_STATE_INTERFACE_OPTS = []

MINA_STATE_MODULE_OPTS = []

MINA_STATE_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/mina_base:#mina_base",
    "@mina//src/lib/snark_params:#snark_params",
    "@mina//src/lib/consensus:#consensus",
    "@mina//src/lib/test_genesis_ledger:#test_genesis_ledger",
    "@snarky//bitstring_lib:#bitstring_lib",
    "@snarky//fold_lib:#fold_lib",
    "@snarky//tuple_lib:#tuple_lib",
    "@mina//src/lib/with_hash:#with_hash",
]

MINA_STATE_DEPS_OPAM = [
    "core_kernel",
]

#################
ocaml_ns_library(
    name = "#mina_state",
    submodules = [
        ":_Ancestor",
        ":_Blockchain_state",
        ":_Consensus_state_hooks",
        ":_Genesis_protocol_state",
        ":_Protocol_state",
        ":_Snark_transition",
    ],
    visibility = [
        "//visibility:public",
    ]
)

#############
ocaml_module(
    name = "_Ancestor",
    opts = MINA_STATE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_state",
    ],
    ppx_data = CONFIG_MLH,
    struct = "ancestor.ml",
    deps = MINA_STATE_DEPS + [
        # do not sort (buildifier)
        ":_Protocol_state",
    ],
    deps_opam = MINA_STATE_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Blockchain_state",
    sig  = ":_Blockchain_state.cmi",
    opts = MINA_STATE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_state",
    ],
    ppx_data = CONFIG_MLH,
    ppx_print = PPX_PRINT,  # obazl:retain
    struct = "blockchain_state.ml",
    deps = MINA_STATE_DEPS,
    deps_opam = MINA_STATE_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Blockchain_state.cmi",
    src = "blockchain_state.mli",
    opts = MINA_STATE_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_state",
    ],
    ppx_data = CONFIG_MLH,
    deps = MINA_STATE_DEPS,
    deps_opam = MINA_STATE_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Consensus_state_hooks",
    sig  = ":_Consensus_state_hooks.cmi",
    opts = MINA_STATE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_state",
    ],
    ppx_data = CONFIG_MLH,
    struct = "consensus_state_hooks.ml",
    deps = MINA_STATE_DEPS + [
        # do not sort (buildifier)
        ":_Blockchain_state",
        ":_Protocol_state",
        ":_Snark_transition",
    ],
    deps_opam = MINA_STATE_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Consensus_state_hooks.cmi",
    src = "consensus_state_hooks.mli",
    opts = MINA_STATE_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_state",
    ],
    ppx_data = CONFIG_MLH,
    deps = MINA_STATE_DEPS + [
        # do not sort (buildifier)
        ":_Blockchain_state",
        ":_Protocol_state",
        ":_Snark_transition",
    ],
    deps_opam = MINA_STATE_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Genesis_protocol_state",
    sig  = ":_Genesis_protocol_state.cmi",
    opts = MINA_STATE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_state",
    ],
    ppx_data = CONFIG_MLH,
    struct = "genesis_protocol_state.ml",
    deps = MINA_STATE_DEPS + [
        # do not sort (buildifier)
        ":_Blockchain_state",
        ":_Protocol_state",
    ],
    deps_opam = MINA_STATE_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Genesis_protocol_state.cmi",
    src = "genesis_protocol_state.mli",
    opts = MINA_STATE_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_state",
    ],
    ppx_data = CONFIG_MLH,
    deps = MINA_STATE_DEPS + [
        # do not sort (buildifier)
        ":_Protocol_state",
    ],
    deps_opam = MINA_STATE_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Protocol_state",
    sig  = ":_Protocol_state.cmi",
    opts = MINA_STATE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_state",
    ],
    ppx_data = CONFIG_MLH,
    ppx_print = PPX_PRINT,  # obazl:retain
    struct = "protocol_state.ml",
    deps = MINA_STATE_DEPS + [
        # do not sort (buildifier)
        ":_Blockchain_state",
    ],
    deps_opam = MINA_STATE_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Protocol_state.cmi",
    src = "protocol_state.mli",
    opts = MINA_STATE_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_state",
    ],
    ppx_data = CONFIG_MLH,
    deps = MINA_STATE_DEPS + [
        # do not sort (buildifier)
        ":_Blockchain_state",
    ],
    deps_opam = MINA_STATE_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Snark_transition",
    sig  = ":_Snark_transition.cmi",
    opts = MINA_STATE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_state",
    ],
    ppx_data = CONFIG_MLH,
    struct = "snark_transition.ml",
    deps = MINA_STATE_DEPS + [
        # do not sort (buildifier)
        ":_Blockchain_state",
    ],
    deps_opam = MINA_STATE_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Snark_transition.cmi",
    src = "snark_transition.mli",
    opts = MINA_STATE_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_state",
    ],
    ppx_data = CONFIG_MLH,
    deps = MINA_STATE_DEPS + [
        # do not sort (buildifier)
        ":_Blockchain_state",
    ],
    deps_opam = MINA_STATE_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "yojson",
        "ppx_hash.runtime-lib",
        "ppx_deriving_yojson.runtime",
        "ppx_sexp_conv.runtime-lib",
        "ppx_deriving.runtime",
        "ppx_assert.runtime-lib",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "bin_prot",
        "fieldslib",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/mina_state:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda:#ppx_coda",
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:#ppx_version",
        "@snarky//h_list/ppx:ppx_h_list",
        "@snarky//ppx:ppx_snarky",
    ],
    deps_opam = [
        "ppx_assert",
        "ppx_bin_prot",
        "ppx_compare",
        "ppx_custom_printf",
        "ppx_deriving.std",
        "ppx_deriving_yojson",
        "ppx_fields_conv",
        "ppx_hash",
        "ppx_inline_test",
        "ppx_let",
        "ppx_sexp_conv",
        "ppxlib",
    ]
)
