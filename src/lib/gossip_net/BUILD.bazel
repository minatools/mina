## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns",
    "ppx_executable",
)
load(
    "//:BUILD.bzl",
    "CONFIG_MLH",
)

################################################################
## STANZA 1: LIBRARY GOSSIP_NET
################################################################
GOSSIP_NET_MODULE_OPTS = []

GOSSIP_NET_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:core",
    "@opam//pkg:async",
    "@opam//pkg:async_extra",
    "@mina//src/lib/perf_histograms",
    "@mina//src/lib/mina_base",
    "@mina//src/lib/coda_transition",
    "@mina//src/lib/coda_net2",
    "@mina//src/lib/network_pool",
    "@mina//src/lib/trust_system",
    "@mina//src/lib/pipe_lib",
    "@mina//src/lib/logger",
    "@mina//src/lib/o1trace",
    "@mina//src/lib/node_addrs_and_ports",
    "@mina//src/lib/mina_metrics",
]

##############
ocaml_archive(
    name = "gossip_net",
    doc = "Gossip Network",
    opts = [],
    visibility = ["//visibility:public"],
    deps = GOSSIP_NET_DEPS + [
        # do not sort (buildifier)
        ":_Any",
        ":_Fake",
        ":_Gossip_net",
        ":_Intf",
        ":_Libp2p",
        ":_Message",
    ],
)

#########
ocaml_ns(
    name = "Gossip_net_ns",
    ns = "gossip_net",
    opts = [],
    submodules = [
        # do not sort (buildifier)
        "any.ml",
        "fake.ml",
        "gossip_net.ml",
        "intf.ml",
        "libp2p.ml",
        "message.ml",
    ],
)

#############
ocaml_module(
    name = "_Any",
    src = "any.ml",
    ns = ":Gossip_net_ns",
    opts = GOSSIP_NET_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "gossip_net",
    ],
    ppx_data = CONFIG_MLH,
    deps = GOSSIP_NET_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
)

#############
ocaml_module(
    name = "_Fake",
    src = "fake.ml",
    ns = ":Gossip_net_ns",
    opts = GOSSIP_NET_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "gossip_net",
    ],
    ppx_data = CONFIG_MLH,
    deps = GOSSIP_NET_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
        ":_Message",
    ],
)

#############
ocaml_module(
    name = "_Gossip_net",
    src = "gossip_net.ml",
    ns = ":Gossip_net_ns",
    opts = GOSSIP_NET_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "gossip_net",
    ],
    ppx_data = CONFIG_MLH,
    deps = GOSSIP_NET_DEPS + [
        # do not sort (buildifier)
        ":_Any",
        ":_Fake",
        ":_Intf",
        ":_Libp2p",
        ":_Message",
    ],
)

#############
ocaml_module(
    name = "_Intf",
    src = "intf.ml",
    ns = ":Gossip_net_ns",
    opts = GOSSIP_NET_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "gossip_net",
    ],
    ppx_data = CONFIG_MLH,
    deps = GOSSIP_NET_DEPS + [
        # do not sort (buildifier)
        ":_Message",
    ],
)

#############
ocaml_module(
    name = "_Libp2p",
    src = "libp2p.ml",
    ns = ":Gossip_net_ns",
    opts = GOSSIP_NET_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "gossip_net",
    ],
    ppx_data = CONFIG_MLH,
    deps = GOSSIP_NET_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
        ":_Message",
    ],
)

#############
ocaml_module(
    name = "_Message",
    src = "message.ml",
    ns = ":Gossip_net_ns",
    opts = GOSSIP_NET_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "gossip_net",
    ],
    ppx_data = CONFIG_MLH,
    deps = GOSSIP_NET_DEPS,
)

###############
ppx_executable(
    name = "ppx1.exe",
    lazy_deps = [
        "@opam//pkg:yojson",
        "@opam//pkg:ppx_deriving_yojson.runtime",
        "@opam//pkg:ppx_sexp_conv.runtime-lib",
        "@opam//pkg:ppx_deriving.runtime",
        "@opam//pkg:ppx_inline_test.runtime-lib",
        "@opam//pkg:bin_prot",
        "@opam//pkg:fieldslib",
    ],
    main = "//bzl/ppx/exe:Driver",
    opts = [],
    visibility = [
        "//src/lib/gossip_net:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda",
        "@opam//pkg:ppx_bin_prot",
        "@opam//pkg:ppx_custom_printf",
        "@opam//pkg:ppx_deriving.eq",
        "@opam//pkg:ppx_deriving.make",
        "@opam//pkg:ppx_deriving_yojson",
        "@opam//pkg:ppx_fields_conv",
        "@opam//pkg:ppx_inline_test",
        "@opam//pkg:ppx_let",
        "@opam//pkg:ppx_pipebang",
        "@opam//pkg:ppx_sexp_conv",
        "@opam//pkg:ppxlib",
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:ppx_version",
    ],
)
