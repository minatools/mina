load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ppx_executable",
)

load(
    "//:BUILD.bzl",
    "CONFIG_MLH",
)

################################################################
## STANZA 1: LIBRARY GOSSIP_NET
################################################################
GOSSIP_NET_MODULE_OPTS = []

GOSSIP_NET_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/perf_histograms",
    "@mina//src/lib/mina_base",
    "@mina//src/lib/coda_transition",
    "@mina//src/lib/coda_net2",
    "@mina//src/lib/network_pool",
    "@mina//src/lib/trust_system",
    "@mina//src/lib/pipe_lib",
    "@mina//src/lib/logger",
    "@mina//src/lib/o1trace",
    "@mina//src/lib/node_addrs_and_ports",
    "@mina//src/lib/mina_metrics",
]
GOSSIP_NET_DEPS_OPAM = [
    "core",
    "async",
    "async_extra",
]

#########
ocaml_ns_library(
    name = "gossip_net",
    main = "_Gossip_net",
    submodules = [
        ":_Any",
        ":_Fake",
        ":_Gossip_net",
        ":_Intf",
        ":_Libp2p",
        ":_Message",
    ],
    visibility = [
        "//src/lib/fake_network:__pkg__",
        "//src/lib/mina_networking:__pkg__"
    ]
)

#############
ocaml_module(
    name = "_Any",
    opts = GOSSIP_NET_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "gossip_net",
    ],
    ppx_data = CONFIG_MLH,
    struct = "any.ml",
    deps = GOSSIP_NET_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
    deps_opam = GOSSIP_NET_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Fake",
    opts = GOSSIP_NET_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "gossip_net",
    ],
    ppx_data = CONFIG_MLH,
    struct = "fake.ml",
    deps = GOSSIP_NET_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
        ":_Message",
    ],
    deps_opam = GOSSIP_NET_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Gossip_net",
    opts = GOSSIP_NET_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "gossip_net",
    ],
    ppx_data = CONFIG_MLH,
    struct = "gossip_net.ml",
    deps = GOSSIP_NET_DEPS + [
        # do not sort (buildifier)
        ":_Any",
        ":_Fake",
        ":_Intf",
        ":_Libp2p",
        ":_Message",
    ],
    deps_opam = GOSSIP_NET_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Intf",
    opts = GOSSIP_NET_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "gossip_net",
    ],
    ppx_data = CONFIG_MLH,
    struct = "intf.ml",
    deps = GOSSIP_NET_DEPS + [
        # do not sort (buildifier)
        ":_Message",
    ],
    deps_opam = GOSSIP_NET_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Libp2p",
    opts = GOSSIP_NET_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "gossip_net",
    ],
    ppx_data = CONFIG_MLH,
    struct = "libp2p.ml",
    deps = GOSSIP_NET_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
        ":_Message",
    ],
    deps_opam = GOSSIP_NET_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Message",
    opts = GOSSIP_NET_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "gossip_net",
    ],
    ppx_data = CONFIG_MLH,
    struct = "message.ml",
    deps = GOSSIP_NET_DEPS,
    deps_opam = GOSSIP_NET_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "yojson",
        "ppx_deriving_yojson.runtime",
        "ppx_sexp_conv.runtime-lib",
        "ppx_deriving.runtime",
        "ppx_inline_test.runtime-lib",
        "bin_prot",
        "fieldslib",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/gossip_net:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda",
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:ppx_version",
    ],
    deps_opam = [
        "ppx_bin_prot",
        "ppx_custom_printf",
        "ppx_deriving.eq",
        "ppx_deriving.make",
        "ppx_deriving_yojson",
        "ppx_fields_conv",
        "ppx_inline_test",
        "ppx_let",
        "ppx_pipebang",
        "ppx_sexp_conv",
        "ppxlib",
    ]
)
