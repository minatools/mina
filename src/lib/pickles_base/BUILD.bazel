load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ppx_executable",
)

PPX_PRINT = "@ppx//print:binary"

################################################################
## STANZA 1: LIBRARY PICKLES_BASE
################################################################
PICKLES_BASE_DEPS = [
    "@mina//src/lib/random_oracle_input",
    "@mina//src/lib/pickles_types",
]

PICKLES_BASE_DEPS_OPAM = [
    "core_kernel",
]

#########
ocaml_ns_library(
    name = "pickles_base",
    submodules = [
        # do not sort (buildifier)
        ":_Domain",
        ":_Domains",
        ":_Side_loaded_verification_key",
    ],
    visibility = [
        "//src/lib/pickles:__subpackages__",
    ]
)

#############
ocaml_module(
    name = "_Domain",
    opts = [
        "-w", "-32",  # Unused value
    ],
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "pickles_base",
    ],
    ppx_print = PPX_PRINT,
    struct = "domain.ml",
    deps = PICKLES_BASE_DEPS,
    deps_opam = PICKLES_BASE_DEPS_OPAM,
)

#############
ocaml_module(
    name = "_Domains",
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "pickles_base",
    ],
    struct = "domains.ml",
    deps = PICKLES_BASE_DEPS + [":_Domain"],  # obazl:retain
    deps_opam = PICKLES_BASE_DEPS_OPAM,
)

#############
ocaml_module(
    name = "_Side_loaded_verification_key",
    opts = [
        "-w", "-22",  # Error (warning 22): Cannot use versioned extension within a functor body
        "-w", "-9",  # Error (warning 9): the following labels are not bound in this record pattern:
    ],
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "pickles_base",
    ],
    ppx_print = PPX_PRINT,
    struct = "side_loaded_verification_key.ml",
    deps = PICKLES_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Domain",
        ":_Domains",
    ],
    deps_opam = PICKLES_BASE_DEPS_OPAM,
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "ppx_expect.collector",
        "yojson",
        "ppx_hash.runtime-lib",
        "ppx_deriving_yojson.runtime",
        "ppx_sexp_conv.runtime-lib",
        "ppx_deriving.runtime",
        "ppx_assert.runtime-lib",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "ppx_bench.runtime-lib",
        "ppx_enumerate.runtime-lib",
        "ppx_module_timer.runtime",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/pickles_base:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda",
        "@ppx_version//src:ppx_version",
        "@snarky//h_list/ppx:ppx_h_list",
    ],
    deps_opam = [
        "ppx_jane",
        "ppxlib",
        "ppx_deriving_yojson",
        "ppx_deriving.std",
    ]
)
