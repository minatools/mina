load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ppx_executable",
)

################################################################
## STANZA 1: LIBRARY CODA_INTF
################################################################
CODA_INTF_MODULE_OPTS = []

CODA_INTF_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/currency",
    "@mina//src/lib/truth",
    "@mina//src/lib/gadt_lib",
    "@mina//src/lib/signature_lib",
    "@mina//src/lib/cache_lib",
    "@mina//src/lib/mina_base",
    "@mina//src/lib/coda_state",
    "@mina//src/lib/snark_work_lib",
    "@mina//src/lib/proof_carrying_data",
    "@mina//src/lib/coda_incremental",
    "@mina//src/lib/blockchain_snark",
    "@mina//src/lib/transaction_snark",
    "@mina//src/lib/coda_transition",
]

CODA_INTF_DEPS_OPAM = [
    "core",
    "async_kernel",
]

#########
ocaml_ns_library(
    name = "coda_intf",
    main = ":_Coda_intf",
    submodules = [
        ":_Coda_intf",
        ":_Core_intf",
        ":_Transition_frontier_components_intf",
    ],
    visibility = [
        "//visibility:public",
    ]
)

#############
ocaml_module(
    name = "_Coda_intf",
    opts = CODA_INTF_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_intf",
    ],
    struct = "coda_intf.ml",
    deps = CODA_INTF_DEPS + [
        # do not sort (buildifier)
        ":_Core_intf",
        ":_Transition_frontier_components_intf",
    ],
    deps_opam = CODA_INTF_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Core_intf",
    opts = CODA_INTF_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_intf",
    ],
    struct = "core_intf.ml",
    deps = CODA_INTF_DEPS,
    deps_opam = CODA_INTF_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Transition_frontier_components_intf",
    opts = CODA_INTF_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_intf",
    ],
    struct = "transition_frontier_components_intf.ml",
    deps = CODA_INTF_DEPS,
    deps_opam = CODA_INTF_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "ppx_expect.collector",
        "yojson",
        "ppx_hash.runtime-lib",
        "ppx_deriving_yojson.runtime",
        "ppx_sexp_conv.runtime-lib",
        "ppx_deriving.runtime",
        "ppx_assert.runtime-lib",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "ppx_bench.runtime-lib",
        "ppx_enumerate.runtime-lib",
        "ppx_module_timer.runtime",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/coda_intf:__pkg__",
    ],
    deps = [
        "@ppx_version//src:ppx_version",
    ],
    deps_opam = [
        "ppx_deriving.std",
        "ppx_deriving_yojson",
        "ppx_jane",
        "ppxlib",
    ]
)
