load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ocaml_signature",
    "ppx_executable",
)
load(
    "//:BUILD.bzl",
    "CONFIG_MLH",
)

################################################################
## STANZA 1: LIBRARY MINA_LIB
################################################################
MINA_LIB_SIGNATURE_OPTS = []

MINA_LIB_MODULE_OPTS = []

MINA_LIB_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/coda_intf",
    "@mina//src/lib/coda_version",
    "@mina//src/lib/pipe_lib",
    "@mina//src/lib/user_command_input",
    "@mina//src/lib/logger",
    "@mina//src/lib/filtered_external_transition",
    "@mina//src/lib/unix_timestamp",
    "@mina//src/lib/debug_assert",
    "@mina//src/lib/o1trace",
    "@mina//src/lib/consensus",
    "@mina//src/lib/secrets",
    "@mina//src/lib/work_selector",
    "@mina//src/lib/mina_networking",
    "@mina//src/lib/block_producer",
    "@mina//src/lib/genesis_constants",
    "@mina//src/lib/sync_handler",
    "@mina//src/lib/transition_router",
    "@mina//src/lib/node_addrs_and_ports",
    "@mina//src/lib/otp_lib",
    "@mina//src/lib/protocol_version",
    "@mina//src/lib/snark_worker",
    "@mina//src/lib/participating_state",
    "@mina//src/lib/transaction_status",
    "@mina//src/lib/sync_status",
    "@mina//src/lib/daemon_rpcs",
    "@mina//src/lib/exit_handlers",

    "@mina//src/app/archive/archive_lib",
]

MINA_LIB_DEPS_OPAM = [
    "core",
    "async",
    "async_extra",
    "incremental",
]

#########
ocaml_ns_library(
    name = "mina_lib",
    main = "_Mina_lib",
    submodules = [
        ":_Archive_client",
        ":_Coda_subscriptions",
        ":_Conf_dir",
        ":_Config",
        ":_Mina_lib",
    ],
    visibility = [
        "//visibility:public",
        # "//src/lib/coda_commands:__pkg__",
        # "//src/lib/coda_plugins:__pkg__",
        # "//src/lib/genesis_ledger:__pkg__",
        # "//src/lib/genesis_ledger_helper:__pkg__"
    ]
)

#############
ocaml_module(
    name = "_Archive_client",
    sig  = ":_Archive_client.cmi",
    opts = MINA_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_lib",
    ],
    ppx_data = CONFIG_MLH,
    struct = "archive_client.ml",
    deps = MINA_LIB_DEPS,
    deps_opam = MINA_LIB_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Archive_client.cmi",
    src = "archive_client.mli",
    opts = MINA_LIB_SIGNATURE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_lib",
    ],
    ppx_data = CONFIG_MLH,
    deps = MINA_LIB_DEPS,
    deps_opam = MINA_LIB_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_subscriptions",
    opts = MINA_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_lib",
    ],
    ppx_data = CONFIG_MLH,
    struct = "coda_subscriptions.ml",
    deps = MINA_LIB_DEPS,
    deps_opam = MINA_LIB_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Conf_dir",
    opts = MINA_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_lib",
    ],
    ppx_data = CONFIG_MLH,
    struct = "conf_dir.ml",
    deps = MINA_LIB_DEPS,
    deps_opam = MINA_LIB_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Config",
    opts = MINA_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_lib",
    ],
    ppx_data = CONFIG_MLH,
    struct = "config.ml",
    deps = MINA_LIB_DEPS,
    deps_opam = MINA_LIB_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Mina_lib",
    sig  = ":_Mina_lib.cmi",
    opts = MINA_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_lib",
    ],
    ppx_data = CONFIG_MLH,
    struct = "mina_lib.ml",
    deps = MINA_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Archive_client",  # obazl:retain
        ":_Coda_subscriptions",
        ":_Conf_dir",
        ":_Config",
    ],
    deps_opam = MINA_LIB_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Mina_lib.cmi",
    src = "mina_lib.mli",
    opts = MINA_LIB_SIGNATURE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_lib",
    ],
    ppx_data = CONFIG_MLH,
    deps = MINA_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Coda_subscriptions",
        ":_Conf_dir",
        ":_Config",
    ],
    deps_opam = MINA_LIB_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "ppx_hash.runtime-lib",
        "ppx_sexp_conv.runtime-lib",
        "ppx_deriving.runtime",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "bin_prot",
        "fieldslib",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/mina_lib:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda",
        "@mina//src/lib/ppx_register_event",
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:ppx_version",
    ],
    deps_opam = [
        "ppx_bin_prot",
        "ppx_compare",
        "ppx_custom_printf",
        "ppx_deriving.eq",
        "ppx_deriving.make",
        "ppx_fields_conv",
        "ppx_hash",
        "ppx_inline_test",
        "ppx_let",
        "ppx_sexp_conv",
        "ppxlib",
    ]
)
