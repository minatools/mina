load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ocaml_signature",
    "ppx_executable",
)
load(
    "//:BUILD.bzl",
    "CONFIG_MLH",
)

DEPS_OPAM = [
    "async",
    "core",
]

#########
ocaml_ns_library(
    name = "key_cache",
    main = ":_Key_cache",
    submodules = [
        ":_Key_cache",
    ],
    visibility = [
        "//src/lib/cache_dir:__pkg__",
        "//src/lib/pickles:__pkg__",
        "//src/lib/zexe_backend:__subpackages__"
        # "//visibility:public"
    ],
)

#############
ocaml_module(
    name = "_Key_cache",
    struct = "key_cache.ml",
    sig = ":_Key_cache.cmi",
    deps = [
        "@mina//src/lib/error_json",
        "@mina//src/lib/logger",
    ],
    deps_opam = DEPS_OPAM,
    ppx = ":ppx1.exe",
    ppx_data = CONFIG_MLH,
    visibility = ["//visibility:public"],
)

################
ocaml_signature(
    name = "_Key_cache.cmi",
    src = "key_cache.mli",
    deps = [
        "@mina//src/lib/error_json",
        "@mina//src/lib/logger",
    ],
    deps_opam = DEPS_OPAM,
    ppx = ":ppx1.exe",
    ppx_data = CONFIG_MLH,
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "ppx_sexp_conv.runtime-lib",
        "ppx_compare.runtime-lib",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    deps = [
        "@mina//src/lib/ppx_coda",
        # "@mina//src/lib/ppx_coda:Log",
        "@ppx_version//src:ppx_version",
        "@ppx_optcomp//src:ppx_optcomp",
    ],
    deps_opam = [
        "ppx_base",
        "ppx_custom_printf",
        "ppx_let",
        "ppxlib",
    ],
    visibility = ["//src/lib/key_cache:__pkg__"]
)
