## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns",
    "ppx_executable",
)
load(
    "//:BUILD.bzl",
    "CONFIG_MLH",
)

################################################################
## STANZA 1: LIBRARY SNARK_PARAMS
################################################################
SNARK_PARAMS_MODULE_OPTS = []

SNARK_PARAMS_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:digestif.c",
    "@opam//pkg:core_kernel",
    "@snarky//sponge",
    "@snarky//group_map",
    "@snarky//fold_lib",
    "@mina//src/lib/o1trace",
    "@snarky//tuple_lib",
    "@snarky//bitstring_lib",
    "@mina//src/lib/snarky_group_map",
    "@snarky//src/base:snarky_backendless",
    "@mina//src/lib/snarky_curves",
    "@mina//src/lib/snark_bits",
    "@mina//src/lib/pickles",
    "@mina//src/lib/crypto_params",
]

##############
ocaml_archive(
    name = "snark_params",
    doc = "Snark parameters",
    opts = [],
    visibility = ["//visibility:public"],
    deps = SNARK_PARAMS_DEPS + [
        # do not sort (buildifier)
        ":_Snark_intf",
        ":_Snark_params",
        ":_Snark_util",
    ],
)

#########
ocaml_ns(
    name = "Snark_params_ns",
    ns = "snark_params",
    opts = [],
    submodules = [
        # do not sort (buildifier)
        "snark_intf.ml",
        "snark_params.ml",
        "snark_util.ml",
    ],
)

#############
ocaml_module(
    name = "_Snark_intf",
    src = "snark_intf.ml",
    ns = ":Snark_params_ns",
    opts = SNARK_PARAMS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snark_params",
    ],
    ppx_data = CONFIG_MLH,
    deps = SNARK_PARAMS_DEPS,
)

#############
ocaml_module(
    name = "_Snark_params",
    src = "snark_params.ml",
    ns = ":Snark_params_ns",
    opts = SNARK_PARAMS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snark_params",
    ],
    ppx_data = CONFIG_MLH,
    deps = SNARK_PARAMS_DEPS + [
        # do not sort (buildifier)
        ":_Snark_intf",
        ":_Snark_util",
    ],
)

#############
ocaml_module(
    name = "_Snark_util",
    src = "snark_util.ml",
    ns = ":Snark_params_ns",
    opts = SNARK_PARAMS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snark_params",
    ],
    ppx_data = CONFIG_MLH,
    deps = SNARK_PARAMS_DEPS,
)

###############
ppx_executable(
    name = "ppx1.exe",
    lazy_deps = [
        "@opam//pkg:yojson",
        "@opam//pkg:ppx_deriving_yojson.runtime",
        "@opam//pkg:ppx_sexp_conv.runtime-lib",
        "@opam//pkg:ppx_deriving.runtime",
        "@opam//pkg:ppx_assert.runtime-lib",
        "@opam//pkg:ppx_compare.runtime-lib",
        "@opam//pkg:ppx_inline_test.runtime-lib",
        "@opam//pkg:bin_prot",
        "@opam//pkg:ppx_bench.runtime-lib",
    ],
    main = "//bzl/ppx/exe:Driver",
    opts = [],
    visibility = [
        "//src/lib/snark_params:__pkg__",
    ],
    deps = [
        "@opam//pkg:ppx_assert",
        "@opam//pkg:ppx_base",
        "@opam//pkg:ppx_bench",
        "@opam//pkg:ppx_bin_prot",
        "@opam//pkg:ppx_custom_printf",
        "@opam//pkg:ppx_deriving.std",
        "@opam//pkg:ppx_deriving_yojson",
        "@opam//pkg:ppx_inline_test",
        "@opam//pkg:ppx_let",
        "@opam//pkg:ppx_sexp_conv",
        "@opam//pkg:ppxlib",
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:ppx_version",
        "@snarky//ppx:ppx_snarky",
    ],
)
