## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns",
)

################################################################
## STANZA 1: LIBRARY LIMB_VECTOR
################################################################
LIMB_VECTOR_MODULE_OPTS = []

LIMB_VECTOR_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:core_kernel",
    "@mina//src/lib/pickles/backend",
    "@mina//src/lib/pickles_types",
    "@snarky//src/base:snarky_backendless",
]

LIMB_VECTOR_PPX = "@//bzl/ppx/exe:ppx_version__ppx_coda__ppx_jane__ppx_deriving.std__ppx_deriving_yojson"

LIMB_VECTOR_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "limb_vector",
]

##############
ocaml_archive(
    name = "limb_vector",
    opts = [],
    visibility = ["//visibility:public"],
    deps = LIMB_VECTOR_DEPS + [
        # do not sort (buildifier)
        ":_Challenge",
        ":_Constant",
        ":_Limb_vector",
        ":_Make",
    ],
)

#########
ocaml_ns(
    name = "Limb_vector_ns",
    ns = "limb_vector",
    opts = [],
    submodules = [
        # do not sort (buildifier)
        "challenge.ml",
        "constant.ml",
        "limb_vector.ml",
        "make.ml",
    ],
)

#############
ocaml_module(
    name = "_Challenge",
    src = "challenge.ml",
    ns = ":Limb_vector_ns",
    opts = LIMB_VECTOR_MODULE_OPTS,
    ppx = LIMB_VECTOR_PPX,
    ppx_args = LIMB_VECTOR_PPX_ARGS,
    deps = LIMB_VECTOR_DEPS + [
        # do not sort (buildifier)
        ":_Constant",
        ":_Make",
    ],
)

#############
ocaml_module(
    name = "_Constant",
    src = "constant.ml",
    ns = ":Limb_vector_ns",
    opts = LIMB_VECTOR_MODULE_OPTS + [
        "-w", "-22" # Deriving bin_io and deriving version disallowed for types in functor body
    ],
    ppx = LIMB_VECTOR_PPX,
    ppx_args = LIMB_VECTOR_PPX_ARGS,
    deps = LIMB_VECTOR_DEPS,
)

#############
ocaml_module(
    name = "_Limb_vector",
    src = "limb_vector.ml",
    ns = ":Limb_vector_ns",
    opts = LIMB_VECTOR_MODULE_OPTS,
    ppx = LIMB_VECTOR_PPX,
    ppx_args = LIMB_VECTOR_PPX_ARGS,
    deps = LIMB_VECTOR_DEPS + [
        # do not sort (buildifier)
        ":_Challenge",
        ":_Constant",
    ],
)

#############
ocaml_module(
    name = "_Make",
    src = "make.ml",
    ns = ":Limb_vector_ns",
    opts = LIMB_VECTOR_MODULE_OPTS,
    ppx = LIMB_VECTOR_PPX,
    ppx_args = LIMB_VECTOR_PPX_ARGS,
    deps = LIMB_VECTOR_DEPS + [
        # do not sort (buildifier)
        ":_Constant",
    ],
)
