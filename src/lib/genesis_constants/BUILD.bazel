load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ppx_executable",
)

CONFIG_MLH = ["//src:config"]

#################
ocaml_ns_library(
    name = "#genesis_constants",
    submodules = [
        ":_Genesis_constants",
    ],
    visibility = [
        "//visibility:public",
    ],
)

#############
ocaml_module(
    name = "_Genesis_constants",
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "genesis_constants",
    ],
    ppx_data = CONFIG_MLH,
    ppx_print = "@ppx//print:binary",
    struct = "genesis_constants.ml",
    deps = [
        "@mina//src/lib/blake2:#blake2",
        "@mina//src/lib/mina_compile_config:#mina_compile_config",
        "@mina//src/lib/currency:#currency",
        "@mina//src/lib/data_hash_lib:#data_hash_lib",
    ],
    deps_opam = [
        "core",
    ],
    visibility = ["//visibility:public"],
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "yojson",
        "ppx_hash.runtime-lib",
        "ppx_deriving_yojson.runtime",
        "ppx_sexp_conv.runtime-lib",
        "ppx_deriving.runtime",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "bin_prot",
        "fieldslib",
    ],
    # deps_adjunct = ["@ppx_version//src/runtime:#ppx_version_runtime"],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/genesis_constants:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda:#ppx_coda",
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:#ppx_version",
        "@snarky//h_list/ppx:ppx_h_list",
    ],
    deps_opam = [
        "ppx_bin_prot",
        "ppx_compare",
        "ppx_custom_printf",
        "ppx_deriving.eq",
        "ppx_deriving.ord",
        "ppx_deriving_yojson",
        "ppx_fields_conv",
        "ppx_hash",
        "ppx_inline_test",
        "ppx_let",
        "ppx_sexp_conv",
        "ppxlib",
    ]
)
