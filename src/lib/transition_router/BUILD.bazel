load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ocaml_signature",
)

################################################################
## STANZA 1: LIBRARY TRANSITION_ROUTER
################################################################
TRANSITION_ROUTER_INTERFACE_OPTS = []

TRANSITION_ROUTER_MODULE_OPTS = []

TRANSITION_ROUTER_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/pipe_lib",
    "@mina//src/lib/transition_frontier",
    "@mina//src/lib/transition_frontier_controller",
    "@mina//src/lib/bootstrap_controller",
    "@mina//src/lib/mina_networking",
]
TRANSITION_ROUTER_DEPS_OPAM = [
    "core",
    "async",
]

TRANSITION_ROUTER_PPX = "@//bzl/ppx/exe:ppx_coda__ppx_version__ppx_jane__ppx_deriving.eq"

TRANSITION_ROUTER_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "transition_router",
]

#########
ocaml_ns_library(
    name = "transition_router",
    main = "_Transition_router",
    submodules = [
        ":_Initial_validator",
        ":_Transition_router",
    ],
    visibility = [
        "//visibility:public",
    ]
)

#############
ocaml_module(
    name = "_Initial_validator",
    opts = TRANSITION_ROUTER_MODULE_OPTS,
    ppx = TRANSITION_ROUTER_PPX,
    ppx_args = TRANSITION_ROUTER_PPX_ARGS,
    struct = "initial_validator.ml",
    deps = TRANSITION_ROUTER_DEPS,
    deps_opam = TRANSITION_ROUTER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Transition_router",
    sig  = ":_Transition_router.cmi",
    opts = TRANSITION_ROUTER_MODULE_OPTS,
    ppx = TRANSITION_ROUTER_PPX,
    ppx_args = TRANSITION_ROUTER_PPX_ARGS,
    struct = "transition_router.ml",
    deps = TRANSITION_ROUTER_DEPS + [
        # do not sort (buildifier)
        ":_Initial_validator",
    ],
    deps_opam = TRANSITION_ROUTER_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Transition_router.cmi",
    src = "transition_router.mli",
    opts = TRANSITION_ROUTER_INTERFACE_OPTS,
    ppx = TRANSITION_ROUTER_PPX,
    ppx_args = TRANSITION_ROUTER_PPX_ARGS,
    deps = TRANSITION_ROUTER_DEPS,
    deps_opam = TRANSITION_ROUTER_DEPS_OPAM
)
