load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ppx_executable",
)

CONFIG_MLH = ["//src:config"]

PPX_PRINT = "@ppx//print:binary"

################################################################
## STANZA 1: LIBRARY NON_ZERO_CURVE_POINT
################################################################
NON_ZERO_CURVE_POINT_MODULE_OPTS = []

NON_ZERO_CURVE_POINT_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/snark_params:#snark_params",
    "@snarky//fold_lib:#fold_lib",
    "@mina//src/lib/codable:#codable",
    # "@ppx_version//src/runtime:#ppx_version_runtime",
]

NON_ZERO_CURVE_POINT_DEPS_OPAM = [
    "core_kernel",
]

#########
ocaml_ns_library(
    name = "#non_zero_curve_point",
    submodules = [
        ":_Compressed_poly",
        ":_Non_zero_curve_point",
    ],
    visibility = [
        "//visibility:public",
        # "//src/lib/signature_lib:__pkg__"
    ]
)

#############
ocaml_module(
    name = "_Compressed_poly",
    opts = NON_ZERO_CURVE_POINT_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "non_zero_curve_point",
    ],
    ppx_data = CONFIG_MLH,
    ppx_print = PPX_PRINT,
    struct = "compressed_poly.ml",
    deps = NON_ZERO_CURVE_POINT_DEPS,
    deps_opam = NON_ZERO_CURVE_POINT_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Non_zero_curve_point",
    opts = NON_ZERO_CURVE_POINT_MODULE_OPTS + [
        "-w",
        "-32",  # Unused value declaration.
    ],
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "non_zero_curve_point",
    ],
    ppx_data = CONFIG_MLH,
    struct = "non_zero_curve_point.ml",
    deps = NON_ZERO_CURVE_POINT_DEPS + [
        # do not sort (buildifier)
        ":_Compressed_poly",
    ],
    deps_opam = NON_ZERO_CURVE_POINT_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "yojson",
        "ppx_hash.runtime-lib",
        "ppx_deriving_yojson.runtime",
        "ppx_sexp_conv.runtime-lib",
        "ppx_deriving.runtime",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "bin_prot",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/non_zero_curve_point:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda:#ppx_coda",
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:#ppx_version",
        "@snarky//h_list/ppx:ppx_h_list",
        "@snarky//ppx:ppx_snarky",
    ],
    deps_opam = [
        "ppx_bin_prot",
        "ppx_compare",
        "ppx_custom_printf",
        "ppx_deriving.eq",
        "ppx_deriving_yojson",
        "ppx_hash",
        "ppx_inline_test",
        "ppx_let",
        "ppx_sexp_conv",
        "ppxlib",
    ]
)
