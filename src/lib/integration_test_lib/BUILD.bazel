## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns",
    "ppx_executable",
)

################################################################
## STANZA 1: LIBRARY INTEGRATION_TEST_LIB
################################################################
INTEGRATION_TEST_LIB_MODULE_OPTS = []

INTEGRATION_TEST_LIB_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:core",
    "@opam//pkg:async",
    "@opam//pkg:cmdliner",
    "@mina//src/lib/mina_base",
    "@mina//src/lib/runtime_config",
    "@mina//src/lib/genesis_constants",
    "@mina//src/lib/transition_frontier",
    "@mina//src/lib/user_command_input",
]

##############
ocaml_archive(
    name = "integration_test_lib",
    opts = [],
    visibility = ["//visibility:public"],
    deps = INTEGRATION_TEST_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Integration_test_lib",
        ":_Malleable_error",
        ":_Test_error",
    ],
)

#########
ocaml_ns(
    name = "Integration_test_lib_ns",
    ns = "integration_test_lib",
    opts = [],
    submodules = [
        # do not sort (buildifier)
        "integration_test_lib.ml",
        "malleable_error.ml",
        "test_error.ml",
    ],
)

#############
ocaml_module(
    name = "_Integration_test_lib",
    src = "integration_test_lib.ml",
    ns = ":Integration_test_lib_ns",
    opts = INTEGRATION_TEST_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "integration_test_lib",
    ],
    deps = INTEGRATION_TEST_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Malleable_error",
        ":_Test_error",
    ],
)

#############
ocaml_module(
    name = "_Malleable_error",
    src = "malleable_error.ml",
    ns = ":Integration_test_lib_ns",
    opts = INTEGRATION_TEST_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "integration_test_lib",
    ],
    deps = INTEGRATION_TEST_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Test_error",
    ],
)

#############
ocaml_module(
    name = "_Test_error",
    src = "test_error.ml",
    ns = ":Integration_test_lib_ns",
    opts = INTEGRATION_TEST_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "integration_test_lib",
    ],
    deps = INTEGRATION_TEST_LIB_DEPS,
)

###############
ppx_executable(
    name = "ppx1.exe",
    lazy_deps = [
        "@opam//pkg:ppx_sexp_conv.runtime-lib",
        "@opam//pkg:ppx_deriving.runtime",
        "@opam//pkg:ppx_assert.runtime-lib",
        "@opam//pkg:ppx_compare.runtime-lib",
        "@opam//pkg:ppx_inline_test.runtime-lib",
    ],
    main = "//bzl/ppx/exe:Driver",
    opts = [],
    visibility = [
        "//src/lib/integration_test_lib:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda",
        "@opam//pkg:ppx_assert",
        "@opam//pkg:ppx_compare",
        "@opam//pkg:ppx_custom_printf",
        "@opam//pkg:ppx_deriving.std",
        "@opam//pkg:ppx_inline_test",
        "@opam//pkg:ppx_let",
        "@opam//pkg:ppx_sexp_conv",
        "@opam//pkg:ppxlib",
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:ppx_version",
    ],
)
