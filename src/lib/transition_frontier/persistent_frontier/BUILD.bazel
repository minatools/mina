load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ocaml_signature",
    "ppx_executable",
)

################################################################
## STANZA 1: LIBRARY PERSISTENT_FRONTIER
################################################################
PERSISTENT_FRONTIER_SIGNATURE_OPTS = []

PERSISTENT_FRONTIER_MODULE_OPTS = []

PERSISTENT_FRONTIER_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/transition_frontier/frontier_base:#frontier_base",
    "@mina//src/lib/block_time:#block_time",
    "@mina//src/lib/transition_frontier/full_frontier",
    "@mina//src/lib/transition_frontier/extensions:#extensions",
    "@mina//src/lib/file_system:#file_system",
    "@mina//src/lib/mina_base:#mina_base",
    "@mina//src/lib/rocksdb:#rocksdb",
    "@mina//src/lib/mina_intf:#mina_intf",
    "@mina//src/lib/signature_lib:#signature_lib",
    "@mina//src/lib/consensus:#consensus",
    "@mina//src/lib/storage:#storage",
    "@mina//src/lib/otp_lib:#otp_lib",
]
PERSISTENT_FRONTIER_DEPS_OPAM = [
    "core",
    "async",
    "yojson",
    "rpc_parallel",
]

#########
ocaml_ns_library(
    name = "#persistent_frontier",
    submodules = [
        ":_Database",
        ":_Diff_buffer",
        ":_Persistent_frontier",
        ":_Sync",
        ":_Worker",
    ],
    visibility = [
        "//src/lib/transition_frontier:__subpackages__"
    ]
)

#############
ocaml_module(
    name = "_Database",
    sig  = ":_Database.cmi",
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "persistent_frontier",
    ],
    struct = "database.ml",
    deps = PERSISTENT_FRONTIER_DEPS,
    deps_opam = PERSISTENT_FRONTIER_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Database.cmi",
    src = "database.mli",
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "persistent_frontier",
    ],
    deps = PERSISTENT_FRONTIER_DEPS,
    deps_opam = PERSISTENT_FRONTIER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Diff_buffer",
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "persistent_frontier",
    ],
    struct = "diff_buffer.ml",
    deps = PERSISTENT_FRONTIER_DEPS + [
        # do not sort (buildifier)
        ":_Worker",
    ],
    deps_opam = PERSISTENT_FRONTIER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Persistent_frontier",
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "persistent_frontier",
    ],
    struct = "persistent_frontier.ml",
    deps = PERSISTENT_FRONTIER_DEPS + [
        # do not sort (buildifier)
        ":_Database",
        ":_Sync",
    ],
    deps_opam = PERSISTENT_FRONTIER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Sync",
    sig  = ":_Sync.cmi",
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "persistent_frontier",
    ],
    struct = "sync.ml",
    deps = PERSISTENT_FRONTIER_DEPS + [
        # do not sort (buildifier)
        ":_Diff_buffer",
        ":_Worker",
    ],
    deps_opam = PERSISTENT_FRONTIER_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Sync.cmi",
    src = "sync.mli",
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "persistent_frontier",
    ],
    deps = PERSISTENT_FRONTIER_DEPS + [
        # do not sort (buildifier)
        ":_Database",
    ],
    deps_opam = PERSISTENT_FRONTIER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Worker",
    sig  = ":_Worker.cmi",
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "persistent_frontier",
    ],
    struct = "worker.ml",
    deps = PERSISTENT_FRONTIER_DEPS + [
        # do not sort (buildifier)
        ":_Database",
    ],
    deps_opam = PERSISTENT_FRONTIER_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Worker.cmi",
    src = "worker.mli",
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "persistent_frontier",
    ],
    deps = PERSISTENT_FRONTIER_DEPS + [
        # do not sort (buildifier)
        ":_Database",
    ],
    deps_opam = PERSISTENT_FRONTIER_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "ppx_expect.collector",
        "yojson",
        "ppx_hash.runtime-lib",
        "ppx_deriving_yojson.runtime",
        "ppx_sexp_conv.runtime-lib",
        "ppx_deriving.runtime",
        "ppx_assert.runtime-lib",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "bin_prot",
        "ppx_bench.runtime-lib",
        "ppx_enumerate.runtime-lib",
        "ppx_module_timer.runtime",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    visibility = [
        "//src/lib/transition_frontier/persistent_frontier:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda:#ppx_coda",
        "@ppx_version//src:#ppx_version",
    ],
    deps_opam = [
        "ppx_bin_prot",
        "ppx_deriving.eq",
        "ppx_deriving_yojson",
        "ppx_jane",
        "ppxlib",
    ]
)
