load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ocaml_signature",
)

################################################################
## STANZA 1: LIBRARY EXTENSIONS
################################################################
EXTENSIONS_SIGNATURE_OPTS = []

EXTENSIONS_MODULE_OPTS = []

EXTENSIONS_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/transition_frontier/frontier_base:#frontier_base",
    "@mina//src/lib/transition_frontier/full_frontier",
    "@mina//src/lib/mina_base:#mina_base",
    "@mina//src/lib/pipe_lib:#pipe_lib",
]
EXTENSIONS_DEPS_OPAM = [
    "async_kernel",
    "core_kernel",
]

EXTENSIONS_PPX = "@//bzl/ppx/exe:ppx_jane__ppx_coda__ppx_version"

EXTENSIONS_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "extensions",
]

#########
ocaml_ns_library(
    name = "#extensions",
    submodules = [
        ":_Best_tip_diff",
        ":_Extensions",
        ":_Functor",
        ":_Identity",
        ":_Intf",
        ":_Ledger_table",
        ":_New_breadcrumbs",
        ":_Root_history",
        ":_Snark_pool_refcount",
        ":_Transition_registry",
    ],
    visibility = [
        "//src/lib/transition_frontier:__subpackages__"
    ]
)

#############
ocaml_module(
    name = "_Best_tip_diff",
    sig  = ":_Best_tip_diff.cmi",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    struct = "best_tip_diff.ml",
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Functor",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Best_tip_diff.cmi",
    src = "best_tip_diff.mli",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Extensions",
    sig  = ":_Extensions.cmi",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    struct = "extensions.ml",
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Best_tip_diff",
        ":_Identity",
        ":_Intf",
        ":_Ledger_table",
        ":_New_breadcrumbs",
        ":_Root_history",
        ":_Snark_pool_refcount",
        ":_Transition_registry",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Extensions.cmi",
    src = "extensions.mli",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Best_tip_diff",
        ":_Identity",
        ":_Ledger_table",
        ":_New_breadcrumbs",
        ":_Root_history",
        ":_Snark_pool_refcount",
        ":_Transition_registry",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Functor",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    struct = "functor.ml",
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Identity",
    sig  = ":_Identity.cmi",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    struct = "identity.ml",
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Functor",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Identity.cmi",
    src = "identity.mli",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Intf",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    struct = "intf.ml",
    deps = EXTENSIONS_DEPS,
    deps_opam = EXTENSIONS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Ledger_table",
    sig  = ":_Ledger_table.cmi",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    struct = "ledger_table.ml",
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Functor",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Ledger_table.cmi",
    src = "ledger_table.mli",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_New_breadcrumbs",
    sig  = ":_New_breadcrumbs.cmi",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    struct = "new_breadcrumbs.ml",
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Functor",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

################
ocaml_signature(
    name = "_New_breadcrumbs.cmi",
    src = "new_breadcrumbs.mli",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Root_history",
    sig  = ":_Root_history.cmi",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    struct = "root_history.ml",
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Functor",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Root_history.cmi",
    src = "root_history.mli",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Snark_pool_refcount",
    struct = "snark_pool_refcount.ml",
    sig  = ":_Snark_pool_refcount.cmi",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Functor",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Snark_pool_refcount.cmi",
    src = "snark_pool_refcount.mli",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    deps = [ # EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Transition_registry",
    sig  = ":_Transition_registry.cmi",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    struct = "transition_registry.ml",
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Functor",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Transition_registry.cmi",
    src = "transition_registry.mli",
    ppx = EXTENSIONS_PPX,
    ppx_args = EXTENSIONS_PPX_ARGS,
    deps = EXTENSIONS_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
    deps_opam = EXTENSIONS_DEPS_OPAM
)
