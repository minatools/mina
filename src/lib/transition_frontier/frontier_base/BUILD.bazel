load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ocaml_signature",
)

################################################################
## STANZA 1: LIBRARY FRONTIER_BASE
################################################################
FRONTIER_BASE_SIGNATURE_OPTS = []

FRONTIER_BASE_MODULE_OPTS = []

FRONTIER_BASE_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/mina_base",
    "@mina//src/lib/coda_state",
    "@mina//src/lib/coda_transition",
    "@mina//src/lib/staged_ledger",
    "@mina//src/lib/base58_check",
]
FRONTIER_BASE_DEPS_OPAM = [
    "core_kernel",
]

FRONTIER_BASE_PPX = "@//bzl/ppx/exe:ppx_jane__ppx_coda__ppx_version__ppx_deriving.std__ppx_deriving_yojson"

FRONTIER_BASE_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "frontier_base",
]

#########
ocaml_ns_library(
    name = "frontier_base",
    submodules = [
        ":_Breadcrumb",
        ":_Diff",
        ":_Frontier_intf",
        ":_Root_data",
        ":_Root_identifier",
    ],
    visibility = [
        "//src/lib/transition_frontier:__subpackages__"
    ]
)

#############
ocaml_module(
    name = "_Breadcrumb",
    sig  = ":_Breadcrumb.cmi",
    ppx = FRONTIER_BASE_PPX,
    ppx_args = FRONTIER_BASE_PPX_ARGS,
    struct = "breadcrumb.ml",
    deps = FRONTIER_BASE_DEPS,
    deps_opam = FRONTIER_BASE_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Breadcrumb.cmi",
    src = "breadcrumb.mli",
    ppx = FRONTIER_BASE_PPX,
    ppx_args = FRONTIER_BASE_PPX_ARGS,
    deps = FRONTIER_BASE_DEPS,
    deps_opam = FRONTIER_BASE_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Diff",
    sig  = ":_Diff.cmi",
    ppx = FRONTIER_BASE_PPX,
    ppx_args = FRONTIER_BASE_PPX_ARGS,
    struct = "diff.ml",
    deps = FRONTIER_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Breadcrumb",
        ":_Root_data",
    ],
    deps_opam = FRONTIER_BASE_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Diff.cmi",
    src = "diff.mli",
    ppx = FRONTIER_BASE_PPX,
    ppx_args = FRONTIER_BASE_PPX_ARGS,
    deps = FRONTIER_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Breadcrumb",
        ":_Root_data",
    ],
    deps_opam = FRONTIER_BASE_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Frontier_intf",
    ppx = FRONTIER_BASE_PPX,
    ppx_args = FRONTIER_BASE_PPX_ARGS,
    struct = "frontier_intf.ml",
    deps = FRONTIER_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Breadcrumb",
    ],
    deps_opam = FRONTIER_BASE_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Root_data",
    sig  = ":_Root_data.cmi",
    ppx = FRONTIER_BASE_PPX,
    ppx_args = FRONTIER_BASE_PPX_ARGS,
    struct = "root_data.ml",
    deps = FRONTIER_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Breadcrumb",
    ],
    deps_opam = FRONTIER_BASE_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Root_data.cmi",
    src = "root_data.mli",
    ppx = FRONTIER_BASE_PPX,
    ppx_args = FRONTIER_BASE_PPX_ARGS,
    deps = FRONTIER_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Breadcrumb",
    ],
    deps_opam = FRONTIER_BASE_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Root_identifier",
    sig  = ":_Root_identifier.cmi",
    ppx = FRONTIER_BASE_PPX,
    ppx_args = FRONTIER_BASE_PPX_ARGS,
    struct = "root_identifier.ml",
    deps = FRONTIER_BASE_DEPS,
    deps_opam = FRONTIER_BASE_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Root_identifier.cmi",
    src = "root_identifier.mli",
    ppx = FRONTIER_BASE_PPX,
    ppx_args = FRONTIER_BASE_PPX_ARGS,
    deps = FRONTIER_BASE_DEPS,
    deps_opam = FRONTIER_BASE_DEPS_OPAM
)
