## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_interface",
    "ocaml_module",
    "ocaml_ns",
    "ppx_executable",
)

################################################################
## STANZA 1: LIBRARY BOOTSTRAP_CONTROLLER
################################################################
BOOTSTRAP_CONTROLLER_INTERFACE_OPTS = []

BOOTSTRAP_CONTROLLER_MODULE_OPTS = []

BOOTSTRAP_CONTROLLER_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:core",
    "@mina//src/lib/mina_base",
    "@mina//src/lib/coda_transition",
    "@mina//src/lib/syncable_ledger",
    "@mina//src/lib/pipe_lib",
    "@mina//src/lib/consensus",
    "@mina//src/lib/transition_frontier",
    "@mina//src/lib/mina_networking",
    "@mina//src/lib/sync_handler",
    "@mina//src/lib/fake_network",
]

##############
ocaml_archive(
    name = "bootstrap_controller",
    opts = [],
    visibility = ["//visibility:public"],
    deps = BOOTSTRAP_CONTROLLER_DEPS + [
        # do not sort (buildifier)
        ":_Bootstrap_controller",
        ":_Transition_cache",
    ],
)

#########
ocaml_ns(
    name = "Bootstrap_controller_ns",
    ns = "bootstrap_controller",
    opts = [],
    submodules = [
        # do not sort (buildifier)
        "bootstrap_controller.ml",
        "transition_cache.ml",
    ],
)

#############
ocaml_module(
    name = "_Bootstrap_controller",
    src = "bootstrap_controller.ml",
    intf = ":_Bootstrap_controller.cmi",
    ns = ":Bootstrap_controller_ns",
    opts = BOOTSTRAP_CONTROLLER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "bootstrap_controller",
    ],
    deps = BOOTSTRAP_CONTROLLER_DEPS + [
        # do not sort (buildifier)
        ":_Transition_cache",
    ],
)

################
ocaml_interface(
    name = "_Bootstrap_controller.cmi",
    src = "bootstrap_controller.mli",
    ns = ":Bootstrap_controller_ns",
    opts = BOOTSTRAP_CONTROLLER_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "bootstrap_controller",
    ],
    deps = BOOTSTRAP_CONTROLLER_DEPS,
)

#############
ocaml_module(
    name = "_Transition_cache",
    src = "transition_cache.ml",
    intf = ":_Transition_cache.cmi",
    ns = ":Bootstrap_controller_ns",
    opts = BOOTSTRAP_CONTROLLER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "bootstrap_controller",
    ],
    deps = BOOTSTRAP_CONTROLLER_DEPS,
)

################
ocaml_interface(
    name = "_Transition_cache.cmi",
    src = "transition_cache.mli",
    ns = ":Bootstrap_controller_ns",
    opts = BOOTSTRAP_CONTROLLER_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "bootstrap_controller",
    ],
    deps = BOOTSTRAP_CONTROLLER_DEPS,
)

###############
ppx_executable(
    name = "ppx1.exe",
    lazy_deps = [
        "@opam//pkg:ppx_expect.collector",
        "@opam//pkg:ppx_hash.runtime-lib",
        "@opam//pkg:ppx_sexp_conv.runtime-lib",
        "@opam//pkg:ppx_deriving.runtime",
        "@opam//pkg:ppx_assert.runtime-lib",
        "@opam//pkg:ppx_compare.runtime-lib",
        "@opam//pkg:ppx_inline_test.runtime-lib",
        "@opam//pkg:ppx_bench.runtime-lib",
        "@opam//pkg:ppx_enumerate.runtime-lib",
        "@opam//pkg:ppx_module_timer.runtime",
    ],
    main = "//bzl/ppx/exe:Driver",
    opts = [],
    visibility = [
        "//src/lib/bootstrap_controller:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda",
        "@mina//src/lib/ppx_register_event",
        "@opam//pkg:ppx_deriving.eq",
        "@opam//pkg:ppx_jane",
        "@opam//pkg:ppxlib",
        "@ppx_version//src:ppx_version",
    ],
)
