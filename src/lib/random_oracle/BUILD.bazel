load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_signature",
    "ocaml_module",
    "ocaml_ns_library",
)

load(
    "//:BUILD.bzl",
    "CONFIG_MLH",
)

################################################################
## STANZA 1: LIBRARY RANDOM_ORACLE
################################################################
RANDOM_ORACLE_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/random_oracle_input",
    "@mina//src/lib/o1trace",
    "@mina//src/lib/pickles",
    "@snarky//src/base:snarky_backendless",
    "@snarky//sponge",
]
RANDOM_ORACLE_DEPS_OPAM = [
    "core_kernel",
]

RANDOM_ORACLE_PPX = "@//bzl/ppx/exe:ppx_version__ppx_optcomp__ppx_sexp_conv__ppx_compare__ppx_inline_test__ppx_assert__ppx_deriving.eq__ppx_deriving_yojson__ppx_let"

RANDOM_ORACLE_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "random_oracle",
]

#################
ocaml_ns_library(
    name = "random_oracle",
    main = "_Random_oracle",
    submodules = [
        ":_Intf",
        ":_Random_oracle",
    ],
    visibility = [
        "//visibility:public",
        # "//src/lib/crypto_params:__pkg__",
        # "//src/lib/currency:__pkg__",
        # "//src/lib/data_hash_lib:__pkg__",
        # "//src/lib/hash_prefix_states:__pkg__",
        # "//src/lib/signature_lib:__pkg__"
    ]
)

#############
ocaml_module(
    name = "_Intf",
    struct = "intf.ml",
    ppx = RANDOM_ORACLE_PPX,
    ppx_args = RANDOM_ORACLE_PPX_ARGS,
    ppx_data = CONFIG_MLH,
    deps = RANDOM_ORACLE_DEPS,
    deps_opam = RANDOM_ORACLE_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Random_oracle",
    struct = "random_oracle.ml",
    sig    = ":_Random_oracle.cmi",
    ppx = RANDOM_ORACLE_PPX,
    ppx_args = RANDOM_ORACLE_PPX_ARGS,
    ppx_data = CONFIG_MLH,
    deps = RANDOM_ORACLE_DEPS,
    deps_opam = RANDOM_ORACLE_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Random_oracle.cmi",
    src = "random_oracle.mli",
    ppx = RANDOM_ORACLE_PPX,
    ppx_args = RANDOM_ORACLE_PPX_ARGS,
    ppx_data = CONFIG_MLH,
    deps = RANDOM_ORACLE_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
    deps_opam = RANDOM_ORACLE_DEPS_OPAM
)
