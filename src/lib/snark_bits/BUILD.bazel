load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ppx_executable",
)

CONFIG_MLH = ["//src:config"]

################################################################
## STANZA 1: LIBRARY SNARK_BITS
################################################################
SNARK_BITS_MODULE_OPTS = []

SNARK_BITS_DEPS = [
    # do not sort (buildifier)
    "@snarky//fold_lib:#fold_lib",
    "@snarky//src/base:#snarky_backendless",
]
SNARK_BITS_DEPS_OPAM = [
    "core_kernel",
    "integers",
]

#########
ocaml_ns_library(
    name = "#snark_bits",
    submodules = [
        ":_Bits",
        ":_Bits_intf",
    ],
    visibility = [
        "//visibility:public",
        # "//src/lib/block_time:__pkg__",
        # "//src/lib/mina_numbers:__pkg__",
        # "//src/lib/currency:__pkg__",
        # "//src/lib/snark_params:__pkg__",
    ]
)

#############
ocaml_module(
    name = "_Bits",
    opts = SNARK_BITS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snark_bits",
    ],
    ppx_data = CONFIG_MLH,
    struct = "bits.ml",
    deps = SNARK_BITS_DEPS + [
        # do not sort (buildifier)
        ":_Bits_intf",
    ],
    deps_opam = SNARK_BITS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Bits_intf",
    opts = SNARK_BITS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snark_bits",
    ],
    ppx_data = CONFIG_MLH,
    struct = "bits_intf.ml",
    deps = SNARK_BITS_DEPS,
    deps_opam = SNARK_BITS_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "ppx_deriving.runtime",
        "ppx_inline_test.runtime-lib",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    # visibility = [
    #     "//src/lib/snark_bits:__pkg__",
    # ],
    deps = [
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:#ppx_version",
        "@snarky//ppx:ppx_snarky",
    ],
    deps_opam = [
        "ppx_deriving.eq",
        "ppx_inline_test",
        "ppx_let",
        "ppxlib",
    ]
)
