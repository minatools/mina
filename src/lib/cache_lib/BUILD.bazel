load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_signature",
    "ppx_executable",
)

CONFIG_MLH = ["//src:config"]

################################################################
## STANZA 1: LIBRARY CACHE_LIB
################################################################
CACHE_LIB_SIGNATURE_OPTS = []

CACHE_LIB_MODULE_OPTS = []

CACHE_LIB_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/logger:logger",
]

CACHE_LIB_DEPS_OPAM = [
    "async_kernel",
    "core_kernel",
]

#########
ocaml_ns_archive(
    name = "cache_lib",
    submodules = [
        ":_Cache_lib",
        ":_Impl",
        ":_Intf"
    ],
    visibility = [
        "//visibility:public",
    ]
)

#############
ocaml_module(
    name = "_Cache_lib",
    sig  = ":_Cache_lib.cmi",
    opts = CACHE_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "cache_lib",
    ],
    ppx_data = CONFIG_MLH,
    struct = "cache_lib.ml",
    deps = CACHE_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Impl",
        ":_Intf",
    ],
    deps_opam = CACHE_LIB_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Cache_lib.cmi",
    src = "cache_lib.mli",
    opts = CACHE_LIB_SIGNATURE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "cache_lib",
    ],
    ppx_data = CONFIG_MLH,
    deps = CACHE_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
    deps_opam = CACHE_LIB_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Impl",
    opts = CACHE_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "cache_lib",
    ],
    ppx_data = CONFIG_MLH,
    struct = "impl.ml",
    deps = CACHE_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
    deps_opam = CACHE_LIB_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Intf",
    opts = CACHE_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "cache_lib",
    ],
    ppx_data = CONFIG_MLH,
    struct = "intf.ml",
    deps = CACHE_LIB_DEPS,
    deps_opam = CACHE_LIB_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "ppx_sexp_conv.runtime-lib",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/cache_lib:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda:ppx_coda",
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:ppx_version",
    ],
    deps_opam = [
        "ppx_base",
        "ppx_custom_printf",
        "ppx_inline_test",
        "ppx_let",
        "ppxlib",
    ]
)
