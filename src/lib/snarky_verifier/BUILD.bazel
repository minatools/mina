## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns",
    "ppx_executable",
)

################################################################
## STANZA 1: LIBRARY SNARKY_VERIFIER
################################################################
SNARKY_VERIFIER_MODULE_OPTS = []

SNARKY_VERIFIER_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:core",          # obazl:retain
    "@opam//pkg:core_kernel",
    "@mina//src/lib/sgn_type",
    "@mina//src/lib/snarky_curves",
    "@snarky//src/base:snarky_backendless",
    "@snarky//snarkette",
]

##############
ocaml_archive(
    name = "snarky_verifier",
    opts = [],
    visibility = ["//visibility:public"],
    deps = SNARKY_VERIFIER_DEPS + [
        # do not sort (buildifier)
        ":_Bowe_gabizon",
        ":_Groth",
        ":_Groth_maller",
        ":_Inputs",
        ":_Summary",
    ],
)

#########
ocaml_ns(
    name = "Snarky_verifier_ns",
    ns = "snarky_verifier",
    opts = [],
    submodules = [
        # do not sort (buildifier)
        "bowe_gabizon.ml",
        "groth.ml",
        "groth_maller.ml",
        "inputs.ml",
        "summary.ml",
    ],
)

#############
ocaml_module(
    name = "_Bowe_gabizon",
    src = "bowe_gabizon.ml",
    ns = ":Snarky_verifier_ns",
    opts = SNARKY_VERIFIER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarky_verifier",
    ],
    deps = SNARKY_VERIFIER_DEPS + [
        # do not sort (buildifier)
        ":_Inputs",
        ":_Summary",
    ],
)

#############
ocaml_module(
    name = "_Groth",
    src = "groth.ml",
    ns = ":Snarky_verifier_ns",
    opts = SNARKY_VERIFIER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarky_verifier",
    ],
    deps = SNARKY_VERIFIER_DEPS + [
        # do not sort (buildifier)
        ":_Inputs",
        ":_Summary",
    ],
)

#############
ocaml_module(
    name = "_Groth_maller",
    src = "groth_maller.ml",
    ns = ":Snarky_verifier_ns",
    opts = SNARKY_VERIFIER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarky_verifier",
    ],
    deps = SNARKY_VERIFIER_DEPS + [
        # do not sort (buildifier)
        ":_Inputs",
        ":_Summary",
    ],
)

#############
ocaml_module(
    name = "_Inputs",
    src = "inputs.ml",
    ns = ":Snarky_verifier_ns",
    opts = SNARKY_VERIFIER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarky_verifier",
    ],
    deps = SNARKY_VERIFIER_DEPS,
)

#############
ocaml_module(
    name = "_Summary",
    src = "summary.ml",
    ns = ":Snarky_verifier_ns",
    opts = SNARKY_VERIFIER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarky_verifier",
    ],
    deps = SNARKY_VERIFIER_DEPS,
)

###############
ppx_executable(
    name = "ppx1.exe",
    lazy_deps = [
        "@opam//pkg:ppx_expect.collector",
        "@opam//pkg:ppx_hash.runtime-lib",
        "@opam//pkg:ppx_sexp_conv.runtime-lib",
        "@opam//pkg:ppx_deriving.runtime",
        "@opam//pkg:ppx_assert.runtime-lib",
        "@opam//pkg:ppx_compare.runtime-lib",
        "@opam//pkg:ppx_inline_test.runtime-lib",
        "@opam//pkg:ppx_bench.runtime-lib",
        "@opam//pkg:ppx_enumerate.runtime-lib",
        "@opam//pkg:ppx_module_timer.runtime",
    ],
    main = "//bzl/ppx/exe:Driver",
    opts = [],
    visibility = [
        "//src/lib/snarky_verifier:__pkg__",
    ],
    deps = [
        "@opam//pkg:ppx_deriving.eq",
        "@opam//pkg:ppx_jane",
        "@opam//pkg:ppxlib",
        "@ppx_version//src:ppx_version",
        "@snarky//h_list/ppx:ppx_h_list",
    ],
)
