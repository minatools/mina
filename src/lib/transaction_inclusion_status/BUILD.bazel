load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ocaml_signature",
)

#################
ocaml_ns_library(
    name = "#transaction_inclusion_status",
    submodules = [
        ":_Transaction_inclusion_status",
    ],
    visibility = [
        "//visibility:public",
    ],
)

#############
ocaml_module(
    name = "_Transaction_inclusion_status",
    struct = "transaction_inclusion_status.ml",
    sig = ":_Transaction_inclusion_status.cmi",
    ppx = "//bzl/ppx/exe:ppx_jane__ppx_coda__ppx_version",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "transaction_inclusion_status",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@mina//src/lib/mina_base:#mina_base",
        "@mina//src/lib/network_pool:#network_pool",
        "@mina//src/lib/transition_frontier:#transition_frontier",
    ],
    deps_opam = [
        "core_kernel",
    ]
)

################
ocaml_signature(
    name = "_Transaction_inclusion_status.cmi",
    src = "transaction_inclusion_status.mli",
    ppx = "//bzl/ppx/exe:ppx_jane__ppx_coda__ppx_version",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "transaction_inclusion_status",
    ],
    deps = [
        "@mina//src/lib/mina_base:#mina_base",
        "@mina//src/lib/network_pool:#network_pool",
        "@mina//src/lib/transition_frontier:#transition_frontier",
    ],
    deps_opam = [
        "core_kernel",
    ]
)
