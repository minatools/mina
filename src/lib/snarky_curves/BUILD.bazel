load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ppx_executable",
)

#################
ocaml_ns_library(
    name = "#snarky_curves",
    submodules = [
        ":_Snarky_curves",
    ],
    visibility = [
        "//visibility:public",
    ],
)

#############
ocaml_module(
    name = "_Snarky_curves",
    struct = "snarky_curves.ml",
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarky_curves",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@mina//src/lib/snarky_field_extensions:#snarky_field_extensions",
        "@snarky//snarkette:#snarkette",
        "@snarky//src/base:#snarky_backendless",
    ],
    deps_opam = [
        "core_kernel",
    ]
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "ppx_expect.collector",
        "ppx_hash.runtime-lib",
        "ppx_sexp_conv.runtime-lib",
        "ppx_deriving.runtime",
        "ppx_assert.runtime-lib",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "ppx_bench.runtime-lib",
        "ppx_enumerate.runtime-lib",
        "ppx_module_timer.runtime",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/snarky_curves:__pkg__",
    ],
    deps = [
        "@ppx_version//src:#ppx_version",
        "@snarky//ppx:ppx_snarky",
    ],
    deps_opam = [
        "ppx_deriving.eq",
        "ppx_jane",
        "ppxlib",
    ]
)
