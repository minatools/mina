load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_executable",
    "ocaml_module",
    "ppx_executable",
)

CONFIG_MLH = ["//src:config"]

################################################################
## STANZA 1: EXECUTABLE GEN
################################################################
GEN_EXECUTABLE_OPTS = []

GEN_MODULE_OPTS = []

GEN_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/pickles",
    ## the rest are already deps of pickles
    # "@mina//src/lib/crs",
    # "@snarky//fold_lib",
    # "@snarky//src/base:snarky_backendless",
    # "@snarky//tuple_lib",
    # "@snarky//group_map",
]

GEN_DEPS_OPAM = [
    "async",
    "core",
    "digestif.c",
    "ppxlib",
]

#################
ocaml_executable(
    name = "gen.exe",
    opts = GEN_EXECUTABLE_OPTS + [
        "-w", "-31",  # same module defined in two places
        "-linkall"
    ],
    visibility = ["//visibility:public"],
    deps = [ # GEN_DEPS + [
        # do not sort (buildifier)
        ":_Gen",
    ],
    deps_opam = GEN_DEPS_OPAM + ["angstrom"]
)

#############
ocaml_module(
    name = "_Gen",
    struct = "gen.ml",
    opts = GEN_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
    ],
    ppx_data = CONFIG_MLH,
    deps = GEN_DEPS,
    deps_opam = GEN_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "bin_prot",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/crypto_params/gen:__pkg__",
    ],
    deps = [
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:ppx_version",
    ],
    deps_opam = [
        "ppx_bin_prot",
        "ppxlib",
        "ppxlib.metaquot",
    ]
)
