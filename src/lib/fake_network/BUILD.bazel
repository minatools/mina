load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_signature",
    "ocaml_module",
    "ocaml_ns_library"
)

#################
ocaml_ns_library(
    name = "fake_network",
    main = ":_Fake_network",
    submodules = [
        ":_Fake_network",
    ],
    visibility = [
        "//visibility:public",
    ],
)

#############
ocaml_module(
    name = "_Fake_network",
    struct = "fake_network.ml",
    sig = ":_Fake_network.cmi",
    ppx = "//bzl/ppx/exe:ppx_coda__ppx_version__ppx_jane__ppx_deriving.std",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "fake_network",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@mina//src/lib/gadt_lib",
        "@mina//src/lib/gossip_net",
        "@mina//src/lib/mina_networking",
        "@mina//src/lib/sync_handler",
    ],
    deps_opam = [
        "async",
        "core",
    ]
)

################
ocaml_signature(
    name = "_Fake_network.cmi",
    src = "fake_network.mli",
    ppx = "//bzl/ppx/exe:ppx_coda__ppx_version__ppx_jane__ppx_deriving.std",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "fake_network",
    ],
    deps = [
        "@mina//src/lib/gadt_lib",
        "@mina//src/lib/gossip_net",
        "@mina//src/lib/mina_networking",
        "@mina//src/lib/sync_handler",
    ],
    deps_opam = [
        "async",
        "core",
    ]
)
