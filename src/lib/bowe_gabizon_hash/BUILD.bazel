load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_signature",
)

################################################################
## STANZA 1: LIBRARY BOWE_GABIZON_HASH
################################################################
BOWE_GABIZON_HASH_INTERFACE_OPTS = []

BOWE_GABIZON_HASH_MODULE_OPTS = []

BOWE_GABIZON_HASH_DEPS_OPAM = [
    "core_kernel",
]

BOWE_GABIZON_HASH_PPX = "@//bzl/ppx/exe:ppx_version__ppx_jane__ppx_deriving.eq"

BOWE_GABIZON_HASH_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "bowe_gabizon_hash",
]

#########
ocaml_ns_archive(
    name = "bowe_gabizon_hash",
    submodules = [
        ":_Bowe_gabizon_hash",
        ":_Inputs_intf"
    ],
    visibility = [
        "//src/lib/crypto_params:__pkg__"
    ]
)

#############
ocaml_module(
    name = "_Bowe_gabizon_hash",
    sig  = ":_Bowe_gabizon_hash.cmi",
    opts = BOWE_GABIZON_HASH_MODULE_OPTS,
    ppx = BOWE_GABIZON_HASH_PPX,
    ppx_args = BOWE_GABIZON_HASH_PPX_ARGS,
    struct = "bowe_gabizon_hash.ml",
    deps = [":_Inputs_intf"],
    deps_opam = BOWE_GABIZON_HASH_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Bowe_gabizon_hash.cmi",
    src = "bowe_gabizon_hash.mli",
    opts = BOWE_GABIZON_HASH_INTERFACE_OPTS,
    ppx = BOWE_GABIZON_HASH_PPX,
    ppx_args = BOWE_GABIZON_HASH_PPX_ARGS,
    deps = [":_Inputs_intf"],
    deps_opam = BOWE_GABIZON_HASH_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Inputs_intf",
    opts = BOWE_GABIZON_HASH_MODULE_OPTS,
    ppx = BOWE_GABIZON_HASH_PPX,
    ppx_args = BOWE_GABIZON_HASH_PPX_ARGS,
    struct = "inputs_intf.ml",
    deps_opam = BOWE_GABIZON_HASH_DEPS_OPAM
)
