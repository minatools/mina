load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_signature",
    "ppx_executable",
)

CONFIG_MLH = ["//src:config"]

################################################################
## STANZA 1: LIBRARY UNSIGNED_EXTENDED
################################################################
UNSIGNED_EXTENDED_SIGNATURE_OPTS = []

UNSIGNED_EXTENDED_MODULE_OPTS = []

UNSIGNED_EXTENDED_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/snark_params:snark_params",
    # "@ppx_version//src/runtime:ppx_version_runtime",
]

UNSIGNED_EXTENDED_DEPS_OPAM = [
    "core",
    "integers",
]

#########
ocaml_ns_archive(
    name = "unsigned_extended",
    submodules = [
        ":_Intf",
        ":_Unsigned_extended",
    ],
    visibility = [
        "//src/lib/currency:__pkg__",
        "//src/lib/ppx_dhall_type:__pkg__",
        "//src/lib/unsigned_extended:__pkg__",
        "//src/lib/mina_base:__pkg__",
        "//src/lib/snark_params:__pkg__",
        "//src/lib/mina_numbers:__pkg__",
        "//src/lib/block_time:__pkg__",
        "//src/nonconsensus/currency:__pkg__",
        "//src/nonconsensus/unsigned_extended:__pkg__",
        "//src/nonconsensus/mina_numbers:__pkg__",
        "//src/nonconsensus/rosetta_lib:__pkg__",
        "//src/app/rosetta/lib:__pkg__",
    ]
)

#############
ocaml_module(
    name = "_Intf",
    struct = "intf.ml",
    opts = UNSIGNED_EXTENDED_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "unsigned_extended",
    ],
    ppx_data = CONFIG_MLH,
    deps = UNSIGNED_EXTENDED_DEPS,
    deps_opam = UNSIGNED_EXTENDED_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Unsigned_extended",
    struct = "unsigned_extended.ml",
    sig  = ":_Unsigned_extended.cmi",
    opts = UNSIGNED_EXTENDED_MODULE_OPTS,
    deps = UNSIGNED_EXTENDED_DEPS + [":_Intf"],
    deps_opam = UNSIGNED_EXTENDED_DEPS_OPAM,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "unsigned_extended",
    ],
    ppx_data = CONFIG_MLH,
)

################
ocaml_signature(
    name = "_Unsigned_extended.cmi",
    src = "unsigned_extended.mli",
    deps_opam = UNSIGNED_EXTENDED_DEPS_OPAM,
    opts = UNSIGNED_EXTENDED_SIGNATURE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "unsigned_extended",
    ],
    ppx_data = CONFIG_MLH,
    deps = UNSIGNED_EXTENDED_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
        "@mina//src/lib/ppx_dhall_type:ppx_dhall_type",
        # "@ppx_version//src/runtime:ppx_version_runtime",
    ],
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "yojson",
        "ppx_hash.runtime-lib",
        "ppx_deriving_yojson.runtime",
        "ppx_sexp_conv.runtime-lib",
        "ppx_deriving.runtime",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "bin_prot",
    ],
    # deps_adjunct = [# "@ppx_version//src/runtime:ppx_version_runtime"],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/unsigned_extended:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda:ppx_coda",
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:ppx_version",
    ],
    deps_opam = [
        "ppx_bin_prot",
        "ppx_compare",
        "ppx_deriving.std",
        "ppx_deriving_yojson",
        "ppx_hash",
        "ppx_inline_test",
        "ppx_sexp_conv",
        "ppxlib"
    ]
)
