load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_executable",
    "ocaml_module",
)
load(
    "//:BUILD.bzl",
    "CONFIG_MLH",
)

################################################################
## STANZA 1: EXECUTABLE GEN_KEYS
################################################################
GEN_KEYS_EXECUTABLE_OPTS = []

GEN_KEYS_MODULE_OPTS = []

GEN_KEYS_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/cache_dir",
    "@mina//src/lib/snark_keys/remove_snark_keys_trigger:remove_keys_trigger",
    "@mina//src/lib/mina_base",
    "@mina//src/lib/transaction_snark",
    "@mina//src/lib/blockchain_snark",
]

GEN_KEYS_DEPS_OPAM = [
    "ppxlib",
    "async",
    "core",
]

GEN_KEYS_PPX = "@//bzl/ppx/exe:ppx_version__ppx_optcomp__ppx_let__ppxlib.metaquot"

GEN_KEYS_PPX_ARGS = [
    # do not sort (buildifier)
]

#################
ocaml_executable(
    name = "gen_keys.exe",
    opts = GEN_KEYS_EXECUTABLE_OPTS,
    visibility = ["//visibility:public"],
    deps = GEN_KEYS_DEPS + [
        ":_Gen_keys",
    ],
    deps_opam = GEN_KEYS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Gen_keys",
    opts = GEN_KEYS_MODULE_OPTS,
    ppx = GEN_KEYS_PPX,
    ppx_args = GEN_KEYS_PPX_ARGS,
    ppx_data = CONFIG_MLH,
    struct = "gen_keys.ml",
    deps = GEN_KEYS_DEPS,
    deps_opam = GEN_KEYS_DEPS_OPAM
)
