load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ocaml_signature",
    "ppx_executable",
)

load(
    "//:BUILD.bzl",
    "CONFIG_MLH",
)

################################################################
## STANZA 1: LIBRARY CODA_NUMBERS
################################################################
CODA_NUMBERS_SIGNATURE_OPTS = []

CODA_NUMBERS_MODULE_OPTS = []

CODA_NUMBERS_DEPS = [
    # do not sort (buildifier)
    "@snarky//fold_lib",
    "@snarky//tuple_lib",
    "@mina//src/lib/snark_bits",
    "@mina//src/lib/snark_params",
    "@mina//src/lib/unsigned_extended",
    "@snarky//src/base:snarky_backendless",
    "@snarky//snarky_integer",
    "@mina//src/lib/ppx_dhall_type",
    "@mina//src/lib/codable",
]
CODA_NUMBERS_DEPS_OPAM = [
    "core"
]

#########
ocaml_ns_library(
    name = "coda_numbers",
    main = ":_Coda_numbers",
    submodules = [
        ":_Account_nonce",
        ":_Coda_numbers",
        ":_Global_slot",
        ":_Hd_index",
        ":_Intf",
        ":_Length",
        ":_Nat",
    ],
    visibility = [
        "//visibility:public",
        # "//src/lib/block_time:__pkg__",
        # "//src/lib/currency:__pkg__",
        # "//src/lib/linked_tree:__pkg__",
        # "//src/lib/runtime_config:__pkg__"
    ]
)

#############
ocaml_module(
    name = "_Account_nonce",
    sig  = ":_Account_nonce.cmi",
    opts = CODA_NUMBERS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers",
    ],
    ppx_data = CONFIG_MLH,
    struct = "account_nonce.ml",
    deps = CODA_NUMBERS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
    deps_opam = CODA_NUMBERS_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Account_nonce.cmi",
    src = "account_nonce.mli",
    opts = CODA_NUMBERS_SIGNATURE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
    deps_opam = CODA_NUMBERS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Coda_numbers",
    opts = CODA_NUMBERS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers",
    ],
    ppx_data = CONFIG_MLH,
    struct = "coda_numbers.ml",
    deps = CODA_NUMBERS_DEPS + [
        # do not sort (buildifier)
        ":_Account_nonce",
        ":_Global_slot",
        ":_Hd_index",
        ":_Length",
        ":_Nat",
    ],
    deps_opam = CODA_NUMBERS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Global_slot",
    sig  = ":_Global_slot.cmi",
    opts = CODA_NUMBERS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers",
    ],
    ppx_data = CONFIG_MLH,
    struct = "global_slot.ml",
    deps = CODA_NUMBERS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
    deps_opam = CODA_NUMBERS_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Global_slot.cmi",
    src = "global_slot.mli",
    opts = CODA_NUMBERS_SIGNATURE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
    deps_opam = CODA_NUMBERS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Hd_index",
    sig  = ":_Hd_index.cmi",
    opts = CODA_NUMBERS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers",
    ],
    ppx_data = CONFIG_MLH,
    struct = "hd_index.ml",
    deps = CODA_NUMBERS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
    deps_opam = CODA_NUMBERS_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Hd_index.cmi",
    src = "hd_index.mli",
    opts = CODA_NUMBERS_SIGNATURE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
    deps_opam = CODA_NUMBERS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Intf",
    opts = CODA_NUMBERS_MODULE_OPTS + [
        "-w",
        "-32",  # Unused value declaration.
    ],
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers",
    ],
    ppx_data = CONFIG_MLH,
    struct = "intf.ml",
    deps = CODA_NUMBERS_DEPS,
    deps_opam = CODA_NUMBERS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Length",
    sig  = ":_Length.cmi",
    opts = CODA_NUMBERS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers",
    ],
    ppx_data = CONFIG_MLH,
    struct = "length.ml",
    deps = CODA_NUMBERS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
    deps_opam = CODA_NUMBERS_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Length.cmi",
    src = "length.mli",
    opts = CODA_NUMBERS_SIGNATURE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
    deps_opam = CODA_NUMBERS_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Nat",
    sig  = ":_Nat.cmi",
    opts = CODA_NUMBERS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers",
    ],
    ppx_data = CONFIG_MLH,
    struct = "nat.ml",
    deps = CODA_NUMBERS_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
    deps_opam = CODA_NUMBERS_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Nat.cmi",
    src = "nat.mli",
    opts = CODA_NUMBERS_SIGNATURE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
    deps_opam = CODA_NUMBERS_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "yojson",
        "ppx_hash.runtime-lib",
        "ppx_deriving_yojson.runtime",
        "ppx_sexp_conv.runtime-lib",
        "ppx_deriving.runtime",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "bin_prot",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/coda_numbers:__pkg__",
    ],
    deps = [
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:ppx_version",
    ],
    deps_opam = [
        "ppx_bin_prot",
        "ppx_compare",
        "ppx_deriving.eq",
        "ppx_deriving_yojson",
        "ppx_hash",
        "ppx_inline_test",
        "ppx_sexp_conv",
        "ppxlib",
    ]
)
