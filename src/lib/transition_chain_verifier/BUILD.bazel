load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_signature",
)

#################
ocaml_ns_archive(
    name = "transition_chain_verifier",
    submodules = [
        ":_Transition_chain_verifier",
    ],
    visibility = [
        "//visibility:public",
    ],
)

#############
ocaml_module(
    name = "_Transition_chain_verifier",
    struct = "transition_chain_verifier.ml",
    sig = ":_Transition_chain_verifier.cmi",
    ppx = "//bzl/ppx/exe:ppx_version__ppx_jane__ppx_deriving.eq",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "transition_chain_verifier",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@mina//src/lib/mina_state:mina_state",
        "@mina//src/lib/merkle_list_verifier:merkle_list_verifier",
        "@mina//src/lib/mina_base:mina_base",
    ],
    deps_opam = [
        "core_kernel",
    ]
)

################
ocaml_signature(
    name = "_Transition_chain_verifier.cmi",
    src = "transition_chain_verifier.mli",
    ppx = "//bzl/ppx/exe:ppx_version__ppx_jane__ppx_deriving.eq",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "transition_chain_verifier",
    ],
    deps = [
        "@mina//src/lib/mina_state:mina_state",
        "@mina//src/lib/merkle_list_verifier:merkle_list_verifier",
        "@mina//src/lib/mina_base:mina_base",
    ],
    deps_opam = [
        "core_kernel",
    ]
)
