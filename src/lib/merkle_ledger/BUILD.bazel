load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_archive",
    "ppx_executable",
)

################################################################
## STANZA 1: LIBRARY MERKLE_LEDGER
################################################################
MERKLE_LEDGER_MODULE_OPTS = []

MERKLE_LEDGER_DEPS = [
    "@ocaml_rocksdb//:rocks",
    "@mina//src/lib/cache_dir",
    "@mina//src/lib/direction:direction",
    "@mina//src/lib/empty_hashes",
    "@mina//src/lib/immutable_array:immutable_array",
    "@mina//src/lib/key_value_database:key_value_database",
    "@mina//src/lib/merkle_address",
    "@mina//src/lib/non_empty_list:non_empty_list",
    "@mina//src/lib/signature_lib:signature_lib",
    "@mina//src/lib/visualization:visualization",
]
MERKLE_LEDGER_DEPS_OPAM = [
    "core",
    "extlib",
    "integers",
    "bitstring",
]

#########
ocaml_ns_archive(
    name = "merkle_ledger",
    submodules = [
        ":_Any_ledger",
        ":_Base_inputs_intf",
        ":_Base_ledger_intf",
        ":_Database",
        ":_Database_intf",
        ":_Graphviz",
        ":_Intf",
        ":_Ledger_extras_intf",
        ":_Location",
        ":_Location_intf",
        ":_Merkle_ledger_intf",
        ":_Merkle_path",
        ":_Merkle_path_intf",
        ":_Null_ledger",
        ":_Syncable_intf",
        ":_Util",
    ],
    visibility = [
        "//visibility:public",
        # "//src/lib/merkle_mask:__pkg__",
        # "//src/lib/syncable_ledger:__pkg__"
    ]
)

#############
ocaml_module(
    name = "_Any_ledger",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "any_ledger.ml",
    deps = [
        # do not sort (buildifier)
        ":_Base_inputs_intf",
        ":_Base_ledger_intf",
        ":_Location",
        ":_Location_intf",
        ":_Merkle_path",
    ],
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Base_inputs_intf",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "base_inputs_intf.ml",
    deps = [
        # do not sort (buildifier)
        ":_Intf",
    ],
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Base_ledger_intf",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "base_ledger_intf.ml",
    deps = [
        # do not sort (buildifier)
        ":_Merkle_path",
        ":_Syncable_intf",
    ],
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Database",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "database.ml",
    deps = [
        # do not sort (buildifier)
        ":_Base_inputs_intf",
        ":_Database_intf",
        ":_Intf",
        ":_Location",
        ":_Location_intf",
        ":_Merkle_path",
        ":_Util",
    ],
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Database_intf",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "database_intf.ml",
    deps = [
        # do not sort (buildifier)
        ":_Base_ledger_intf",
        ":_Location",
    ],
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Graphviz",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "graphviz.ml",
    deps = [
        # do not sort (buildifier)
        ":_Base_ledger_intf",
        ":_Intf",
        ":_Location",
        ":_Location_intf",
    ],
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Intf",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "intf.ml",
    deps = MERKLE_LEDGER_DEPS,
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Ledger_extras_intf",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "ledger_extras_intf.ml",
    deps = [
        # do not sort (buildifier)
        ":_Merkle_ledger_intf",
    ],
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Location",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "location.ml",
    deps = MERKLE_LEDGER_DEPS,
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Location_intf",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "location_intf.ml",
    deps = MERKLE_LEDGER_DEPS,
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Merkle_ledger_intf",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "merkle_ledger_intf.ml",
    deps = [
        # do not sort (buildifier)
        ":_Base_ledger_intf",
    ],
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Merkle_path",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "merkle_path.ml",
    deps = MERKLE_LEDGER_DEPS,
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Merkle_path_intf",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "merkle_path_intf.ml",
    deps = MERKLE_LEDGER_DEPS,
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Null_ledger",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "null_ledger.ml",
    deps = [
        # do not sort (buildifier)
        ":_Base_inputs_intf",
        ":_Base_ledger_intf",
        ":_Location",
        ":_Location_intf",
        ":_Merkle_path",
    ],
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Syncable_intf",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "syncable_intf.ml",
    deps = MERKLE_LEDGER_DEPS,
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Util",
    opts = MERKLE_LEDGER_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "merkle_ledger",
    ],
    struct = "util.ml",
    deps = [
        # do not sort (buildifier)
        ":_Intf",
        ":_Location",
        ":_Location_intf",
    ],
    deps_opam = MERKLE_LEDGER_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "ppx_expect.collector",
        "yojson",
        "ppx_hash.runtime-lib",
        "ppx_deriving_yojson.runtime",
        "ppx_sexp_conv.runtime-lib",
        "ppx_deriving.runtime",
        "ppx_assert.runtime-lib",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "ppx_bench.runtime-lib",
        "ppx_enumerate.runtime-lib",
        "ppx_module_timer.runtime",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/merkle_ledger:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda:ppx_coda",
        "@ppx_version//src:ppx_version",
    ],
    deps_opam = [
        "ppx_deriving.eq",
        "ppx_deriving.show",
        "ppx_deriving_yojson",
        "ppx_jane",
        "ppxlib",
    ]
)
