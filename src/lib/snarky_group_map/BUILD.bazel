load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    # "ocaml_archive",
    "ocaml_signature",
    "ocaml_library",
    "ocaml_module",
    "ocaml_ns_archive",
)

################################################################
## STANZA 1: LIBRARY SNARKY_GROUP_MAP
################################################################
SNARKY_GROUP_MAP_INTERFACE_OPTS = []

SNARKY_GROUP_MAP_MODULE_OPTS = []

SNARKY_GROUP_MAP_DEPS = [
    # do not sort (buildifier)
    "@snarky//group_map",
    "@snarky//src/base:snarky_backendless",
]

SNARKY_GROUP_MAP_DEPS_OPAM = [
    "core_kernel",
]

SNARKY_GROUP_MAP_PPX = "@//bzl/ppx/exe:ppx_version__ppx_jane__ppx_deriving.eq"

SNARKY_GROUP_MAP_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "snarky_group_map",
]

#################
ocaml_ns_archive(
    name = "snarky_group_map",
    submodules = [
        ":_Checked_map",
        ":_Snarky_group_map",
    ],
    visibility = [
        "//src/lib/pickles:__pkg__",
        "//src/lib/snark_params:__pkg__",
    ]
)

#############
ocaml_module(
    name = "_Checked_map",
    # ns_env = ":_ns_env",
    opts = SNARKY_GROUP_MAP_MODULE_OPTS + [
        "-open", "Group_map"    # FIXME: should not be necessary
    ],
    ppx = SNARKY_GROUP_MAP_PPX,
    ppx_args = SNARKY_GROUP_MAP_PPX_ARGS,
    sig = ":_Checked_map.cmi",
    struct = "checked_map.ml",
    deps = SNARKY_GROUP_MAP_DEPS,
    deps_opam = SNARKY_GROUP_MAP_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Checked_map.cmi",
    src = "checked_map.mli",
    opts = SNARKY_GROUP_MAP_INTERFACE_OPTS,
    ppx = SNARKY_GROUP_MAP_PPX,
    ppx_args = SNARKY_GROUP_MAP_PPX_ARGS,
    deps = SNARKY_GROUP_MAP_DEPS,
    deps_opam = SNARKY_GROUP_MAP_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Snarky_group_map",
    opts = SNARKY_GROUP_MAP_MODULE_OPTS + [
        # "-open", "Group_map"    # FIXME: should not be necessary
    ],
    ppx = SNARKY_GROUP_MAP_PPX,
    ppx_args = SNARKY_GROUP_MAP_PPX_ARGS,
    sig = ":_Snarky_group_map.cmi",
    struct = "snarky_group_map.ml",
    deps_opam = SNARKY_GROUP_MAP_DEPS_OPAM,
    deps = SNARKY_GROUP_MAP_DEPS + [
        # do not sort (buildifier)
        ":_Checked_map",
    ],
)

################
ocaml_signature(
    name = "_Snarky_group_map.cmi",
    src = "snarky_group_map.mli",
    opts = SNARKY_GROUP_MAP_INTERFACE_OPTS,
    ppx = SNARKY_GROUP_MAP_PPX,
    ppx_args = SNARKY_GROUP_MAP_PPX_ARGS,
    deps = SNARKY_GROUP_MAP_DEPS,
    deps_opam = SNARKY_GROUP_MAP_DEPS_OPAM
)
