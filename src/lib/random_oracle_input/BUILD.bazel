load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_archive",
    "ppx_executable",
)

#################
ocaml_ns_archive(
    name = "random_oracle_input",
    submodules = [
        ":_Random_oracle_input"
    ],
    visibility = [
        "//src/lib/pickles:__pkg__",
        "//src/lib/pickles_base:__pkg__",
        "//src/lib/random_oracle:__pkg__",
    ],
)

#############
ocaml_module(
    name = "_Random_oracle_input",
    struct = "random_oracle_input.ml",
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "random_oracle_input",
    ],
    deps_opam = [
        "core_kernel",
    ],
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "ppx_expect.collector",
        "ppx_hash.runtime-lib",
        "ppx_sexp_conv.runtime-lib",
        "ppx_assert.runtime-lib",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "ppx_bench.runtime-lib",
        "ppx_enumerate.runtime-lib",
        "ppx_module_timer.runtime",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/random_oracle_input:__pkg__",
    ],
    deps = [
        "@ppx_version//src:ppx_version",
    ],
    deps_opam = [
        "ppx_inline_test",
        "ppx_jane",
        "ppx_let",
        "ppx_sexp_conv",
        "ppxlib",
    ]
)
