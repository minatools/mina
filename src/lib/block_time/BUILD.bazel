load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ocaml_signature",
    "ppx_executable",
)

CONFIG_MLH = ["//src:config"]

#################
ocaml_ns_library(
    name = "#block_time",
    submodules = [
        ":_Block_time"
    ],
    visibility = [
        "//visibility:public",
    ],
)

#############
ocaml_module(
    name = "_Block_time",
    opts = [
        "-w",
        "-32",  # Unused value declaration.
    ],
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "block_time",
    ],
    ppx_data = CONFIG_MLH,
    sig = ":_Block_time.cmi",
    struct = "block_time.ml",
    visibility = [
        "//visibility:public"
    ],
    deps = [
        "@mina//src/lib/mina_numbers:#mina_numbers",
        "@mina//src/lib/logger:#logger",
        "@mina//src/lib/snark_bits:#snark_bits",
        "@mina//src/lib/snark_params:#snark_params",
        "@mina//src/lib/timeout_lib",
        "@mina//src/lib/unsigned_extended:#unsigned_extended",
    ],
    deps_opam = [
        "core",
    ]
)

################
ocaml_signature(
    name = "_Block_time.cmi",
    src = "block_time.mli",
    opts = [],
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "block_time",
    ],
    ppx_data = CONFIG_MLH,
    deps = [
        "@mina//src/lib/mina_numbers:#mina_numbers",
        "@mina//src/lib/logger:#logger",
        "@mina//src/lib/snark_bits:#snark_bits",
        "@mina//src/lib/snark_params:#snark_params",
        "@mina//src/lib/timeout_lib",
        "@mina//src/lib/unsigned_extended:#unsigned_extended",
    ],
    deps_opam = [
        "core",
    ],
    visibility = [
        "//src/lib/currency:__pkg__"
    ]
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "yojson",
        "ppx_hash.runtime-lib",
        "ppx_deriving_yojson.runtime",
        "ppx_sexp_conv.runtime-lib",
        "ppx_deriving.runtime",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "bin_prot",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/block_time:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda:#ppx_coda",
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:#ppx_version",
    ],
    deps_opam = [
        "ppx_bin_prot",
        "ppx_compare",
        "ppx_deriving.eq",
        "ppx_deriving_yojson",
        "ppx_hash",
        "ppx_inline_test",
        "ppx_let",
        "ppx_sexp_conv",
        "ppxlib",
    ]
)
