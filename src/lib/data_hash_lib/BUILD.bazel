load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_signature",
    "ppx_executable",
)

CONFIG_MLH = ["//src:config"]

################################################################
## STANZA 1: LIBRARY DATA_HASH_LIB
################################################################
DATA_HASH_LIB_INTERFACE_OPTS = []

DATA_HASH_LIB_MODULE_OPTS = []

DATA_HASH_LIB_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/codable:codable",
    "@mina//src/lib/snark_params:snark_params",
    "@mina//src/lib/outside_hash_image:outside_hash_image",
    "@mina//src/lib/random_oracle:random_oracle",
]
DATA_HASH_LIB_DEPS_OPAM = ["core_kernel"]

#########
ocaml_ns_archive(
    name = "data_hash_lib",
    submodules = [
        ":_Data_hash",
        ":_Data_hash_intf",
        ":_State_hash",
    ],
    visibility = [
        "//src/lib/genesis_constants:__pkg__",
    ]
)

#############
ocaml_module(
    name = "_Data_hash",
    sig  = ":_Data_hash.cmi",
    opts = DATA_HASH_LIB_MODULE_OPTS + [
        "-w",
        "-32",  # Unused value declaration.
    ],
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "data_hash_lib",
    ],
    ppx_data = CONFIG_MLH,
    struct = "data_hash.ml",
    deps = DATA_HASH_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Data_hash_intf",
    ],
    deps_opam = DATA_HASH_LIB_DEPS_OPAM
)

################
ocaml_signature(
    name = "_Data_hash.cmi",
    src = "data_hash.mli",
    opts = DATA_HASH_LIB_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "data_hash_lib",
    ],
    ppx_data = CONFIG_MLH,
    deps = DATA_HASH_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Data_hash_intf",
    ],
    deps_opam = DATA_HASH_LIB_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Data_hash_intf",
    opts = DATA_HASH_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "data_hash_lib",
    ],
    ppx_data = CONFIG_MLH,
    struct = "data_hash_intf.ml",
    deps = DATA_HASH_LIB_DEPS,
    deps_opam = DATA_HASH_LIB_DEPS_OPAM
)

#############
ocaml_module(
    name = "_State_hash",
    sig  = ":_State_hash.cmi",
    opts = DATA_HASH_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "data_hash_lib",
    ],
    ppx_data = CONFIG_MLH,
    struct = "state_hash.ml",
    deps = DATA_HASH_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Data_hash",
    ],
    deps_opam = DATA_HASH_LIB_DEPS_OPAM
)

################
ocaml_signature(
    name = "_State_hash.cmi",
    src = "state_hash.mli",
    opts = DATA_HASH_LIB_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "data_hash_lib",
    ],
    ppx_data = CONFIG_MLH,
    deps = DATA_HASH_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Data_hash",
    ],
    deps_opam = DATA_HASH_LIB_DEPS_OPAM
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "ppx_hash.runtime-lib",
        "ppx_sexp_conv.runtime-lib",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/data_hash_lib:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda:ppx_coda",
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:ppx_version",
        "@snarky//ppx:ppx_snarky",
    ],
    deps_opam = [
        "ppx_compare",
        "ppx_hash",
        "ppx_inline_test",
        "ppx_let",
        "ppx_sexp_conv",
        "ppxlib",
    ]
)
