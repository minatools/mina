load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
    "ppx_executable",
)

#################
ocaml_ns_library(
    name = "mina_graphql",
    main = ":_Mina_graphql",
    submodules = [
        ":_Mina_graphql",
    ],
    visibility = [
        "//visibility:public",
    ],
)

#############
ocaml_module(
    name = "_Mina_graphql",
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "mina_graphql",
    ],
    struct = "mina_graphql.ml",
    visibility = ["//visibility:public"],
    deps = [
        "@mina//src/lib/coda_commands",
        "@mina//src/lib/coda_state",
        "@mina//src/lib/coda_transition",
        "@mina//src/lib/filtered_external_transition",
        "@mina//src/lib/mina_base",
        "@mina//src/lib/mina_lib",
        "@mina//src/lib/network_peer",
        "@mina//src/lib/node_addrs_and_ports",
        "@mina//src/lib/user_command_input",
    ],
    deps_opam = [
        "async",
        "cohttp",
        "core",
        "graphql-async",
        "graphql-cohttp",
        "ppx_deriving_yojson.runtime",
    ]
)

###############
ppx_executable(
    name = "ppx1.exe",
    deps_adjunct_opam = [
        "ppx_expect.collector",
        "yojson",
        "ppx_hash.runtime-lib",
        "ppx_deriving_yojson.runtime",
        "ppx_sexp_conv.runtime-lib",
        "ppx_assert.runtime-lib",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "ppx_bench.runtime-lib",
        "ppx_enumerate.runtime-lib",
        "ppx_module_timer.runtime",
    ],
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//src/lib/mina_graphql:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda",
        "@ppx_version//src:ppx_version",
    ],
    deps_opam = [
        "ppx_deriving_yojson",
        "ppx_jane",
        "ppxlib",
    ]
)
