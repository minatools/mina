## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_interface",
    "ocaml_module",
    "ocaml_ns",
    "ppx_executable",
)
load(
    "//:BUILD.bzl",
    "CONFIG_MLH",
)

################################################################
## STANZA 1: LIBRARY CODA_LIB
################################################################
CODA_LIB_INTERFACE_OPTS = []

CODA_LIB_MODULE_OPTS = []

CODA_LIB_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:core",
    "@opam//pkg:async",
    "@opam//pkg:async_extra",
    "@opam//pkg:incremental",
    "@mina//src/lib/coda_intf",
    "@mina//src/lib/pipe_lib",
    "@mina//src/lib/user_command_input",
    "@mina//src/lib/logger",
    "@mina//src/lib/unix_timestamp",
    "@mina//src/lib/debug_assert",
    "@mina//src/lib/o1trace",
    "@mina//src/lib/consensus",
    "@mina//src/lib/secrets",
    "@mina//src/lib/auxiliary_database",
    "@mina//src/lib/work_selector",
    "@mina//src/lib/coda_networking",
    "@mina//src/lib/block_producer",
    "@mina//src/lib/genesis_constants",
    "@mina//src/lib/sync_handler",
    "@mina//src/lib/transition_router",
    "@mina//src/lib/node_addrs_and_ports",
    "@mina//src/lib/otp_lib",
    "@mina//src/lib/protocol_version",
    "@mina//src/lib/snark_worker",
    "@mina//src/lib/participating_state",
    "@mina//src/lib/transaction_status",
    "@mina//src/lib/sync_status",
    "@mina//src/lib/daemon_rpcs",
    "@mina//src/app/archive/archive_lib",
    "@mina//src/lib/exit_handlers",
]

##############
ocaml_archive(
    name = "coda_lib",
    doc = "Coda gut layer",
    opts = [],
    visibility = ["//visibility:public"],
    deps = CODA_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Archive_client",
        ":_Coda_lib",
        ":_Coda_subscriptions",
        ":_Conf_dir",
        ":_Config",
    ],
)

#########
ocaml_ns(
    name = "Coda_lib_ns",
    ns = "coda_lib",
    opts = [],
    submodules = [
        # do not sort (buildifier)
        "archive_client.ml",
        "coda_lib.ml",
        "coda_subscriptions.ml",
        "conf_dir.ml",
        "config.ml",
    ],
)

#############
ocaml_module(
    name = "_Archive_client",
    src = "archive_client.ml",
    intf = ":_Archive_client.cmi",
    ns = ":Coda_lib_ns",
    opts = CODA_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_lib",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_LIB_DEPS,
)

################
ocaml_interface(
    name = "_Archive_client.cmi",
    src = "archive_client.mli",
    ns = ":Coda_lib_ns",
    opts = CODA_LIB_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_lib",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_LIB_DEPS,
)

#############
ocaml_module(
    name = "_Coda_lib",
    src = "coda_lib.ml",
    intf = ":_Coda_lib.cmi",
    ns = ":Coda_lib_ns",
    opts = CODA_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_lib",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Archive_client",     # obazl:retain
        ":_Coda_subscriptions",
        ":_Conf_dir",
        ":_Config",
    ],
)

################
ocaml_interface(
    name = "_Coda_lib.cmi",
    src = "coda_lib.mli",
    ns = ":Coda_lib_ns",
    opts = CODA_LIB_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_lib",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_LIB_DEPS + [
        # do not sort (buildifier)
        ":_Coda_subscriptions",
        ":_Conf_dir",
        ":_Config",
    ],
)

#############
ocaml_module(
    name = "_Coda_subscriptions",
    src = "coda_subscriptions.ml",
    ns = ":Coda_lib_ns",
    opts = CODA_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_lib",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_LIB_DEPS,
)

#############
ocaml_module(
    name = "_Conf_dir",
    src = "conf_dir.ml",
    ns = ":Coda_lib_ns",
    opts = CODA_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_lib",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_LIB_DEPS,
)

#############
ocaml_module(
    name = "_Config",
    src = "config.ml",
    ns = ":Coda_lib_ns",
    opts = CODA_LIB_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_lib",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_LIB_DEPS,
)

###############
ppx_executable(
    name = "ppx1.exe",
    lazy_deps = [
        "@opam//pkg:ppx_hash.runtime-lib",
        "@opam//pkg:ppx_sexp_conv.runtime-lib",
        "@opam//pkg:ppx_deriving.runtime",
        "@opam//pkg:ppx_compare.runtime-lib",
        "@opam//pkg:ppx_inline_test.runtime-lib",
        "@opam//pkg:bin_prot",
        "@opam//pkg:fieldslib",
    ],
    main = "//bzl/ppx/exe:Driver",
    opts = [],
    visibility = [
        "//src/lib/coda_lib:__pkg__",
    ],
    deps = [
        "@mina//src/lib/ppx_coda",
        "@mina//src/lib/ppx_register_event",
        "@opam//pkg:ppx_bin_prot",
        "@opam//pkg:ppx_compare",
        "@opam//pkg:ppx_custom_printf",
        "@opam//pkg:ppx_deriving.eq",
        "@opam//pkg:ppx_deriving.make",
        "@opam//pkg:ppx_fields_conv",
        "@opam//pkg:ppx_hash",
        "@opam//pkg:ppx_inline_test",
        "@opam//pkg:ppx_let",
        "@opam//pkg:ppx_sexp_conv",
        "@opam//pkg:ppxlib",
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:ppx_version",
    ],
)
