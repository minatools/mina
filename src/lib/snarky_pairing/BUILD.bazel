load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_library",
)

################################################################
## STANZA 1: LIBRARY SNARKY_PAIRING
################################################################
SNARKY_PAIRING_MODULE_OPTS = []

SNARKY_PAIRING_DEPS = [
    # do not sort (buildifier)
    "@mina//src/lib/sgn_type:#sgn_type",
    "@mina//src/lib/snarky_field_extensions:#snarky_field_extensions",
    "@snarky//src/base:#snarky_backendless",
    "@snarky//snarkette:#snarkette",
]
SNARKY_PAIRING_DEPS_OPAM = ["core_kernel"]

SNARKY_PAIRING_PPX = "@//bzl/ppx/exe:ppx_version__ppx_jane__ppx_deriving.eq"

SNARKY_PAIRING_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "snarky_pairing",
]

#################
ocaml_ns_library(
    name = "#snarky_pairing",
    submodules = [
        ":_Final_exponentiation",
        ":_G1_precomputation",
        ":_G2_precomputation",
        ":_Miller_loop",
    ],
)

#############
ocaml_module(
    name = "_Final_exponentiation",
    opts = SNARKY_PAIRING_MODULE_OPTS,
    ppx = SNARKY_PAIRING_PPX,
    ppx_args = SNARKY_PAIRING_PPX_ARGS,
    struct = "final_exponentiation.ml",
    deps = SNARKY_PAIRING_DEPS,
    deps_opam = SNARKY_PAIRING_DEPS_OPAM
)

#############
ocaml_module(
    name = "_G1_precomputation",
    opts = SNARKY_PAIRING_MODULE_OPTS,
    ppx = SNARKY_PAIRING_PPX,
    ppx_args = SNARKY_PAIRING_PPX_ARGS,
    struct = "g1_precomputation.ml",
    deps = SNARKY_PAIRING_DEPS,
    deps_opam = SNARKY_PAIRING_DEPS_OPAM
)

#############
ocaml_module(
    name = "_G2_precomputation",
    opts = SNARKY_PAIRING_MODULE_OPTS,
    ppx = SNARKY_PAIRING_PPX,
    ppx_args = SNARKY_PAIRING_PPX_ARGS,
    struct = "g2_precomputation.ml",
    deps = SNARKY_PAIRING_DEPS,
    deps_opam = SNARKY_PAIRING_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Miller_loop",
    opts = SNARKY_PAIRING_MODULE_OPTS,
    ppx = SNARKY_PAIRING_PPX,
    ppx_args = SNARKY_PAIRING_PPX_ARGS,
    struct = "miller_loop.ml",
    deps = SNARKY_PAIRING_DEPS + [
        # do not sort (buildifier)
        ":_G1_precomputation",
        ":_G2_precomputation",
    ],
    deps_opam = SNARKY_PAIRING_DEPS_OPAM
)
