## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_interface",
    "ocaml_module",
    "ocaml_ns",
    "ppx_executable",
)
load(
    "//:BUILD.bzl",
    "CONFIG_MLH",
)

################################################################
## STANZA 1: LIBRARY CODA_NUMBERS_NONCONSENSUS
################################################################
CODA_NUMBERS_NONCONSENSUS_INTERFACE_OPTS = []

CODA_NUMBERS_NONCONSENSUS_MODULE_OPTS = []

CODA_NUMBERS_NONCONSENSUS_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:core_kernel",
    "@snarky//fold_lib",
    "@snarky//tuple_lib",
    "@mina//src/lib/bignum_bigint",
    "@mina//src/nonconsensus/snark_bits:snark_bits_nonconsensus",
    "@mina//src/nonconsensus/unsigned_extended:unsigned_extended_nonconsensus",
    "@mina//src/nonconsensus/random_oracle:random_oracle_nonconsensus",
    "@mina//src/lib/codable",
    "@mina//src/lib/ppx_dhall_type",
]

##############
ocaml_archive(
    name = "coda_numbers_nonconsensus",
    doc = "Snark-friendly numbers used in Coda consensus",
    opts = [],
    visibility = ["//visibility:public"],
    deps = CODA_NUMBERS_NONCONSENSUS_DEPS + [
        # do not sort (buildifier)
        ":_Account_nonce",
        ":_Coda_numbers",
        ":_Global_slot",
        ":_Hd_index",
        ":_Intf",
        ":_Length",
        ":_Nat",
    ],
)

#########
ocaml_ns(
    name = "Coda_numbers_nonconsensus_ns",
    ns = "coda_numbers_nonconsensus",
    opts = [],
    submodules = [
        # do not sort (buildifier)
        "account_nonce.ml",
        "coda_numbers.ml",
        "global_slot.ml",
        "hd_index.ml",
        "intf.ml",
        "length.ml",
        "nat.ml",
    ],
)

#############
ocaml_module(
    name = "_Account_nonce",
    src = "account_nonce.ml",
    intf = ":_Account_nonce.cmi",
    ns = ":Coda_numbers_nonconsensus_ns",
    opts = CODA_NUMBERS_NONCONSENSUS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers_nonconsensus",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_NONCONSENSUS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
)

################
ocaml_interface(
    name = "_Account_nonce.cmi",
    src = "account_nonce.mli",
    ns = ":Coda_numbers_nonconsensus_ns",
    opts = CODA_NUMBERS_NONCONSENSUS_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers_nonconsensus",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_NONCONSENSUS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
)

#############
ocaml_module(
    name = "_Coda_numbers",
    src = "coda_numbers.ml",
    ns = ":Coda_numbers_nonconsensus_ns",
    opts = CODA_NUMBERS_NONCONSENSUS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers_nonconsensus",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_NONCONSENSUS_DEPS + [
        # do not sort (buildifier)
        ":_Account_nonce",
        ":_Global_slot",
        ":_Hd_index",
        ":_Length",
        ":_Nat",
    ],
)

#############
ocaml_module(
    name = "_Global_slot",
    src = "global_slot.ml",
    intf = ":_Global_slot.cmi",
    ns = ":Coda_numbers_nonconsensus_ns",
    opts = CODA_NUMBERS_NONCONSENSUS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers_nonconsensus",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_NONCONSENSUS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
)

################
ocaml_interface(
    name = "_Global_slot.cmi",
    src = "global_slot.mli",
    ns = ":Coda_numbers_nonconsensus_ns",
    opts = CODA_NUMBERS_NONCONSENSUS_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers_nonconsensus",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_NONCONSENSUS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
)

#############
ocaml_module(
    name = "_Hd_index",
    src = "hd_index.ml",
    intf = ":_Hd_index.cmi",
    ns = ":Coda_numbers_nonconsensus_ns",
    opts = CODA_NUMBERS_NONCONSENSUS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers_nonconsensus",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_NONCONSENSUS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
)

################
ocaml_interface(
    name = "_Hd_index.cmi",
    src = "hd_index.mli",
    ns = ":Coda_numbers_nonconsensus_ns",
    opts = CODA_NUMBERS_NONCONSENSUS_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers_nonconsensus",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_NONCONSENSUS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
)

#############
ocaml_module(
    name = "_Intf",
    src = "intf.ml",
    ns = ":Coda_numbers_nonconsensus_ns",
    opts = CODA_NUMBERS_NONCONSENSUS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers_nonconsensus",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_NONCONSENSUS_DEPS,
)

#############
ocaml_module(
    name = "_Length",
    src = "length.ml",
    intf = ":_Length.cmi",
    ns = ":Coda_numbers_nonconsensus_ns",
    opts = CODA_NUMBERS_NONCONSENSUS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers_nonconsensus",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_NONCONSENSUS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
)

################
ocaml_interface(
    name = "_Length.cmi",
    src = "length.mli",
    ns = ":Coda_numbers_nonconsensus_ns",
    opts = CODA_NUMBERS_NONCONSENSUS_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers_nonconsensus",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_NONCONSENSUS_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
    ],
)

#############
ocaml_module(
    name = "_Nat",
    src = "nat.ml",
    intf = ":_Nat.cmi",
    ns = ":Coda_numbers_nonconsensus_ns",
    opts = CODA_NUMBERS_NONCONSENSUS_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers_nonconsensus",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_NONCONSENSUS_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
)

################
ocaml_interface(
    name = "_Nat.cmi",
    src = "nat.mli",
    ns = ":Coda_numbers_nonconsensus_ns",
    opts = CODA_NUMBERS_NONCONSENSUS_INTERFACE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "coda_numbers_nonconsensus",
    ],
    ppx_data = CONFIG_MLH,
    deps = CODA_NUMBERS_NONCONSENSUS_DEPS + [
        # do not sort (buildifier)
        ":_Intf",
    ],
)

###############
ppx_executable(
    name = "ppx1.exe",
    lazy_deps = [
        "@opam//pkg:yojson",
        "@opam//pkg:ppx_hash.runtime-lib",
        "@opam//pkg:ppx_deriving_yojson.runtime",
        "@opam//pkg:ppx_sexp_conv.runtime-lib",
        "@opam//pkg:ppx_deriving.runtime",
        "@opam//pkg:ppx_compare.runtime-lib",
        "@opam//pkg:ppx_inline_test.runtime-lib",
        "@opam//pkg:bin_prot",
    ],
    main = "//bzl/ppx/exe:Driver",
    opts = [],
    visibility = [
        "//src/nonconsensus/coda_numbers:__pkg__",
    ],
    deps = [
        "@opam//pkg:ppx_bin_prot",
        "@opam//pkg:ppx_compare",
        "@opam//pkg:ppx_deriving.eq",
        "@opam//pkg:ppx_deriving_yojson",
        "@opam//pkg:ppx_hash",
        "@opam//pkg:ppx_inline_test",
        "@opam//pkg:ppx_sexp_conv",
        "@opam//pkg:ppxlib",
        "@ppx_optcomp//src:ppx_optcomp",
        "@ppx_version//src:ppx_version",
    ],
)
