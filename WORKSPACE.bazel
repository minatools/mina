workspace( name = "mina" )
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository", "new_git_repository")

################################################################
#### OCAML ####
git_repository(
    name = "obazl_rules_ocaml",
    remote = "https://github.com/obazl/rules_ocaml",
    branch = "dev",
    # commit = "feef897197b36b14b65ffdf00b9badcbdb8f42f4",
    # shallow_since = "1593623637 -0500"
)

load("@obazl_rules_ocaml//ocaml:bootstrap.bzl",
     "ocaml_configure",
     "opam_configure",
     "ocaml_register_toolchains")

opam_configure()

ocaml_configure()

ocaml_register_toolchains(installation="host")

################################################################
local_repository( name = "async_kernel" , path = "src/external/async_kernel")
local_repository( name = "graphql_ppx"  , path = "src/external/graphql_ppx")
local_repository( name = "ocaml_extlib" , path = "src/external/ocaml_extlib")
local_repository( name = "ppx_optcomp"  , path = "src/external/ppx_optcomp")
local_repository( name = "ppx_version"  , path = "src/external/ppx_version")
local_repository( name = "rpc_parallel" , path = "src/external/rpc_parallel")
################################################
################ Golang Support ################
local_repository(name = "libp2p_helper", path = "src/app/libp2p_helper")

# gazelle:proto disable_global
load("@libp2p_helper//:BUILD.bzl", "libp2p_fetch_go_rules", "libp2p_fetch_go_libs")
libp2p_fetch_go_rules()

load("@io_bazel_rules_go//go:deps.bzl",
     "go_download_sdk",
     "go_register_toolchains",
     "go_rules_dependencies",
     )

go_download_sdk(
    name = "go_sdk",
    version = "1.13",
)
go_rules_dependencies()
go_register_toolchains()

load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies", "go_repository")

libp2p_fetch_go_libs(go_repository)

gazelle_dependencies(go_repository_default_config = "@libp2p_helper//:WORKSPACE.bazel")

################################################

gazelle_dependencies(go_repository_default_config = "@libp2p_helper//:WORKSPACE.bazel")
